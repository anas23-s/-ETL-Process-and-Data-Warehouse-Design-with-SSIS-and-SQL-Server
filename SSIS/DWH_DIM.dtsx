<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/25/2023 3:14:36 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="MACAS01-DBI02"
  DTS:CreatorName="WORKPLACE\AdminOuchdani"
  DTS:DTSID="{A84BA646-F7D5-40E1-B6D1-4F7CB02BA706}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.170"
  DTS:LocaleID="1033"
  DTS:ObjectName="DWH_DIM"
  DTS:PackageType="5"
  DTS:VersionBuild="210"
  DTS:VersionGUID="{16A9B795-4683-44B1-A66F-78B55B75BF8D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[MACAS01-DBI01\BIDEV01.DWH.bi_user]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{C5D08859-D311-4A31-BA15-720282097DFD}"
      DTS:ObjectName="MACAS01-DBI01\BIDEV01.DWH.bi_user">
      <DTS:PropertyExpression
        DTS:Name="Password">@[User::Password]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::ServerName]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="UserName">@[User::Username]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=MACAS01-DBI01\BIDEV01;User ID=bi_user;Initial Catalog=DWH;Provider=SQLNCLI11.1;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA3BlaY5JDPE+0b0WtQb/W5wAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAABaOWq69e3gKhTQlSPQn543AAAAAASAAACgAAAAEAAAAEBAj9HUUyMB2NfgCkfadScoAAAAmE03WxnZVMq26z2E4zeLLFT5Ykq1jtGwszLNI4wVp10ilh2uFlVQLxQAAADfWRdWDXiZF3nxFXbDQHJxRjTyYQ</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[MACAS01-DBI01\BIDEV01.STG.bi_user]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{7EFC0C6C-C380-4C43-8E7A-9FACF2484208}"
      DTS:ObjectName="MACAS01-DBI01\BIDEV01.STG.bi_user">
      <DTS:PropertyExpression
        DTS:Name="Password">@[User::Password]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[User::ServerName]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="UserName">@[User::Username]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=MACAS01-DBI01\BIDEV01;User ID=bi_user;Initial Catalog=STG;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA3BlaY5JDPE+0b0WtQb/W5wAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAD4omsRbejZSYb8yEfyKWrzAAAAAASAAACgAAAAEAAAABIYcWSSiMOGDAMk8w76Kx0oAAAAhLCZTXaINaORWfzI8VPBPG+sjPkltcXnPsJ5X2ynen9i21goIYeg9BQAAAARBh+GQFWRSXZynmuRGB1sXg1oAQ</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{47AD48DA-D91A-4956-B03E-0AB71CAC8ED9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Password">
      <DTS:VariableValue
        DTS:DataType="8">Ex@kisNelite2023</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BD8B2391-235D-494C-A321-3D090DF97222}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ServerName">
      <DTS:VariableValue
        DTS:DataType="8">MACAS01-DBI01\BIDEV01</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{82B33ADE-11A3-4D9F-B366-D72667E1C517}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Username">
      <DTS:VariableValue
        DTS:DataType="8">bi_user</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\CSP DIM"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{bdd704a6-c25f-4ab5-b2cd-3927fd29ae8d}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="CSP DIM">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\CSP DIM\D_CacheAdUsers"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{bb0425e7-b766-4c4f-a546-a070138846af}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_CacheAdUsers"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_CacheAdUsers AS T&#xA;USING (  select cache_ad_user_id,&#xA;user_last_name,&#xA;user_first_name,&#xA;case when user_last_name is not null or user_first_name is not null then isnull(user_last_name,'') +' ' +isnull(user_first_name,'')&#xA;else SUBSTRING([user_mail], 0, charindex('@', [user_mail], 0)) end user_full_name,&#xA;[user_mail],&#xA;user_deleted,&#xA;SourceSystem,&#xA;v.user_display_name,&#xA;v.user_frozen,&#xA;v.user_phone&#xA;from [STG].[ds].[v_collab_cach_users] v&#xA;) S &#xA;ON  T.CacheAdUserID = S.cache_ad_user_id and T.SourceSystem='Collab'&#xA;WHEN MATCHED AND &#xA;(isnull(T.LastName,'') &lt;&gt; isnull(S.user_last_name,'') OR&#xA;isnull(T.FirstName,'') &lt;&gt; isnull(S.user_first_name,'') OR&#xA;isnull(T.Email,'') &lt;&gt; isnull(S.user_mail,'')  OR&#xA;isnull(T.isdeleted,'') &lt;&gt; isnull(S.user_deleted,'')  OR&#xA;isnull(T.FullName,'') &lt;&gt; isnull(S.user_full_name,'') OR&#xA;isnull(T.SourceSystem,'') &lt;&gt; isnull(S.SourceSystem,'') OR&#xA;isnull(T.isFrozen,'') &lt;&gt; isnull(S.user_frozen,'') OR&#xA;isnull(T.MobilePhone,'') &lt;&gt; isnull(S.user_phone,'') OR&#xA;isnull(T.DisplayName,'') &lt;&gt; isnull(S.user_display_name,'') &#xA;)&#xA;   THEN UPDATE SET T.LastName = S.user_last_name ,&#xA;   T.FirstName = S.user_first_name ,&#xA;   T.Email = S.user_mail ,&#xA;   T.FullName = S.user_full_name ,&#xA;   T.isdeleted = S.user_deleted,&#xA;   T.SourceSystem=S.SourceSystem,&#xA;   T.isFrozen=S.user_frozen,&#xA;   T.MobilePhone=S.user_phone,&#xA;   T.DisplayName=S.user_display_name&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (CacheAdUserID,LastName,FirstName,Email,FullName,isdeleted,SourceSystem,isFrozen,MobilePhone,DisplayName)&#xA;   VALUES (S.cache_ad_user_id,S.user_last_name,S.user_first_name,S.user_mail,S.user_full_name ,S.user_deleted,S.SourceSystem,S.user_frozen,S.user_phone,S.user_display_name);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\CSP DIM\D_Contract"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{ee0b47b5-3df6-453b-a89c-5037e2f725e1}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_Contract"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_Contract AS T&#xA;USING (  select c.id ContractID,c.contract_number ContractNumber,c.description ContractDescription&#xA;  from stg.ds.jpass_contract c&#xA;) S &#xA;ON  T.ContractID = S.ContractID&#xA;WHEN MATCHED AND &#xA;(isnull(T.ContractNumber,'') &lt;&gt; isnull(S.ContractNumber,'') OR&#xA;isnull(T.ContractDescription,'') &lt;&gt; isnull(S.ContractDescription,'') &#xA;)&#xA;   THEN UPDATE SET T.ContractNumber = S.ContractNumber ,&#xA;   T.ContractDescription = S.ContractDescription&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (ContractID,ContractNumber,ContractDescription)&#xA;   VALUES (S.ContractID,S.ContractNumber,S.ContractDescription);&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\CSP DIM\D_Enumeration"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{857cc664-8352-492f-aa8c-0c185bf59c1b}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_Enumeration"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_Enumeration AS T&#xA;USING (SELECT 'CSP-'+cast([id] as nvarchar(10)) EnumID&#xA;    ,[id]&#xA;      ,[type] EnumType&#xA;      ,[code] EnumCode&#xA;      ,[label] EnumLabel&#xA;  FROM [STG].ds.[csp_enumeration]&#xA;&#xA;  ) S &#xA;ON  T.EnumID = S.EnumID &#xA;WHEN MATCHED AND (isnull(T.Type,'') &lt;&gt; isnull(S.enumType,'') or isnull(T.Code,'') &lt;&gt; isnull(S.enumCode,'') or isnull(T.Label,'') &lt;&gt; isnull(S.EnumLabel,''))&#xA;   THEN UPDATE SET T.Type = S.EnumType, T.Code = S.EnumCode, T.Label = S.EnumLabel &#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (enumID,ID,Type,Code,Label)&#xA;   VALUES (S.enumID,S.ID,S.EnumType,S.EnumCode,S.EnumLabel);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\HSE DIM"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{16302b2a-c256-4279-8db3-d32758493012}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="HSE DIM">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\HSE DIM\D_SOR"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{400f0be9-f8c1-424d-9fb5-5698c61634b8}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_SOR"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_SOR AS T&#xA;USING (select distinct Id SORID,&#xA;Project SORProject,&#xA; Description SORDescription,&#xA; LocationOfSORValue SORLocation,&#xA; GroupValue as SORGroupValue,&#xA; Statut SORStatut,&#xA; CriticalRisk SORCriticalRisk,&#xA; SubjectValue SORSubjectValue,&#xA; TypeValue TypeValue&#xA;from stg.hse.sor&#xA;) S &#xA;ON  T.SORID = S.SORID &#xA;WHEN MATCHED AND (&#xA;isnull(T.SORProject,'') &lt;&gt; isnull(S.SORProject,'') OR &#xA;isnull(T.SORLocation,'') &lt;&gt; isnull(S.SORLocation,'') OR &#xA;isnull(T.SORDescription,'') &lt;&gt; isnull(S.SORDescription,'') OR &#xA;isnull(T.SORGroupValue,'') &lt;&gt; isnull(S.SORGroupValue,'')OR &#xA;isnull(T.SORStatut,'') &lt;&gt; isnull(S.SORStatut,'')OR &#xA;isnull(T.SORCriticalRisk,'') &lt;&gt; isnull(S.SORCriticalRisk,'')OR &#xA;isnull(T.SORSubjectValue,'') &lt;&gt; isnull(S.SORSubjectValue,'')OR &#xA;isnull(T.TypeValue,'') &lt;&gt; isnull(S.TypeValue,'')&#xA;)&#xA;THEN UPDATE SET T.SORProject = S.SORProject,&#xA;T.SORLocation = S.SORLocation,&#xA;T.SORDescription = S.SORDescription,&#xA;T.SORGroupValue = S.SORGroupValue,&#xA;T.SORStatut = S.SORStatut,&#xA;T.SORCriticalRisk = S.SORCriticalRisk,&#xA;T.SORSubjectValue = S.SORSubjectValue,&#xA;T.TypeValue = S.TypeValue&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (SORID,SORProject ,SORLocation,SORDescription,SORGroupValue,SORStatut,SORCriticalRisk,SORSubjectValue,TypeValue)&#xA;   VALUES (S.SORID,S.SORProject ,S.SORLocation,S.SORDescription,S.SORGroupValue,S.SORStatut,S.SORCriticalRisk,S.SORSubjectValue,S.TypeValue);&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\HSE DIM\D_SubEvent"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{78538c85-7664-4e8c-8bb5-8daa8f8c9721}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_SubEvent"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_SubEvent AS T&#xA;USING (select distinct id,&#xA;UnsafeactsValue,&#xA;UnsafeconditionsValue,&#xA;PeopleFactorsValue,&#xA;ExecutionFactorsValue,&#xA;ManagementAspectsValue,&#xA;ProgramSystemAspectsValue,&#xA;Projectvalue,&#xA;Descriptionvalue&#xA;from stg.hse.SubEvent&#xA;) S &#xA;ON  T.SubeventID = S.id &#xA;WHEN MATCHED AND (&#xA;isnull(T.UnsafeactsValue,'') &lt;&gt; isnull(S.UnsafeactsValue,'') OR &#xA;isnull(T.UnsafeconditionsValue,'') &lt;&gt; isnull(S.UnsafeconditionsValue,'') OR &#xA;isnull(T.PeopleFactorsValue,'') &lt;&gt; isnull(S.PeopleFactorsValue,'') OR &#xA;isnull(T.ExecutionFactorsValue,'') &lt;&gt; isnull(S.ExecutionFactorsValue,'') OR &#xA;isnull(T.ManagementAspectsValue,'') &lt;&gt; isnull(S.ManagementAspectsValue,'') OR &#xA;isnull(T.ProgramSystemAspectsValue,'') &lt;&gt; isnull(S.ProgramSystemAspectsValue,'') OR &#xA;isnull(T.Projectvalue,'') &lt;&gt; isnull(S.Projectvalue,'') OR &#xA;isnull(T.Descriptionvalue,'') &lt;&gt; isnull(S.Descriptionvalue,'')&#xA;)&#xA;THEN UPDATE SET T.UnsafeactsValue = S.UnsafeactsValue,&#xA;T.UnsafeconditionsValue = S.UnsafeconditionsValue,&#xA;T.PeopleFactorsValue = S.PeopleFactorsValue,&#xA;T.ExecutionFactorsValue = S.ExecutionFactorsValue,&#xA;T.ManagementAspectsValue = S.ManagementAspectsValue,&#xA;T.ProgramSystemAspectsValue = S.ProgramSystemAspectsValue,&#xA;T.Projectvalue = S.Projectvalue,&#xA;T.Descriptionvalue = S.Descriptionvalue&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (SubEventID,UnsafeactsValue ,&#xA;UnsafeconditionsValue ,&#xA;PeopleFactorsValue ,&#xA;ExecutionFactorsValue ,&#xA;ManagementAspectsValue ,&#xA;ProgramSystemAspectsValue ,&#xA;Projectvalue ,&#xA;Descriptionvalue )&#xA;   VALUES (S.ID,S.UnsafeactsValue ,&#xA;S.UnsafeconditionsValue ,&#xA;S.PeopleFactorsValue ,&#xA;S.ExecutionFactorsValue ,&#xA;S.ManagementAspectsValue ,&#xA;S.ProgramSystemAspectsValue ,&#xA;S.Projectvalue ,&#xA;S.Descriptionvalue )&#xA;;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\HSE DIM\D_SubeventType"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{1c5e29fd-a901-4e05-8a93-3ed01c74199c}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_SubeventType"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_SubEventType AS T&#xA;USING (select distinct isnull(TypeValue,'-') TypeValue,&#xA;isnull(SubEventValue,'-') SubEventValue&#xA;from stg.hse.SubEvent&#xA;where isnull(TypeValue,SubEventValue) is not null) S &#xA;ON  T.TypeValue = S.TypeValue and T.SubEventValue=S.SubEventValue&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (TypeValue,SubEventValue)&#xA;   VALUES (S.TypeValue,S.SubEventValue)&#xA;;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\HSE DIM\D_Submiter"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{c08bd727-c6d6-4d7c-909a-4951b3f51c6b}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_Submiter"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="with sub as (&#xA;select distinct MailValue&#xA;from stg.hse.SubEvent&#xA;where MailValue is not null&#xA;union&#xA;select distinct MailValue&#xA;from stg.hse.sor &#xA;where MailValue is not null&#xA;),subenr as (&#xA;select sub.MailValue,isnull(se.SubmiterValue,'-') SubmiterValue&#xA;from sub&#xA;outer apply (select distinct SubmiterValue from stg.hse.SubEvent s where s.MailValue = sub.MailValue) se&#xA;)&#xA;&#xA;MERGE DWH.DIM.D_Submiter AS T&#xA;USING (select distinct  MailValue,SubmiterValue from subenr) S &#xA;ON  T.SubmiterValue = S.SubmiterValue and T.MailValue=S.MailValue&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (SubmiterValue,MailValue)&#xA;   VALUES (S.SubmiterValue,S.MailValue)&#xA;;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\JPASS"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{20b8ca93-0425-47c3-8771-8033f9f00d84}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="JPASS">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\JPASS\D_AccOrganization"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{db3bb50e-3fa7-45ec-b7e2-ee90111110ae}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_AccOrganization"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_AccOrganization AS T&#xA;USING (SELECT distinct certificate_accredited_organization FROM STG.dS.v_jpass_emp_certificates&#xA;where certificate_accredited_organization is not null and certificate_accredited_organization&lt;&gt; '') S &#xA;ON  T.AccOrganization = S.certificate_accredited_organization&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (AccOrganization)&#xA;   VALUES (S.certificate_accredited_organization);&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\JPASS\D_Behavior"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{dc012a98-6b23-45ce-bb2d-bb83bc60a343}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_Behavior"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_Behavior AS T&#xA;USING (SELECT distinct behavior_id,behavior_req_action,behavior_description,behavior_label,behavior_type&#xA; FROM STG.dS.v_jpass_behavior&#xA;where behavior_id is not null) S &#xA;ON  T.BehaviorID = S.behavior_id&#xA;WHEN MATCHED AND &#xA;(isnull(T.BehaviorReqAction,'') &lt;&gt; isnull(S.behavior_req_action,'') &#xA;OR isnull(T.BehaviorDescription,'') &lt;&gt; isnull(S.behavior_description,'')&#xA;OR isnull(T.behaviorlabel,'') &lt;&gt; isnull(S.behavior_label,'')&#xA;OR isnull(T.behaviortype,'') &lt;&gt; isnull(S.behavior_type,'')&#xA;)&#xA;   THEN UPDATE SET &#xA;T.BehaviorReqAction = S.behavior_req_action , &#xA;T.BehaviorDescription = S.behavior_description,&#xA;T.behaviorlabel = S.behavior_label,&#xA;T.behaviortype = S.behavior_type&#xA;&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (BehaviorID,BehaviorReqAction,BehaviorDescription,behaviorlabel,behaviortype,StartDate)&#xA;   VALUES (S.behavior_id ,S.behavior_req_action,S.behavior_description,behavior_label,behavior_type,cast(cast(getdate() as date) as datetime));" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\JPASS\D_BehaviorType"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{62bcc685-2423-46f6-be2f-3cca183e15ea}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_BehaviorType"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_BehaviorType AS T&#xA;USING (select behavior_label_id,behavior_type_id,behavior_label,behavior_type from stg.ds.v_jpass_BEHAVIOR_TYPE) S &#xA;ON  T.BehaviorTypeID = S.behavior_type_id and  T.BehaviorLabelID = S.behavior_label_id&#xA;WHEN MATCHED AND (isnull(T.BehaviorType,'') &lt;&gt; isnull(S.behavior_type,'') &#xA;or isnull(T.BehaviorLabel,'') &lt;&gt; isnull(S.behavior_label,'') &#xA;)&#xA;THEN UPDATE SET T.BehaviorType = S.behavior_type ,T.Behaviorlabel = S.behavior_label&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (BehaviorTypeID,BehaviorType,Behaviorlabel,BehaviorlabelID)&#xA;   VALUES (S.behavior_type_id ,S.behavior_type,Behavior_label,Behavior_label_ID);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\JPASS\D_CacheAdUsers"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{f866f684-ad77-489f-9af5-a0aaa470f3c4}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_CacheAdUsers"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_CacheAdUsers AS T&#xA;USING (  select cache_ad_user_id,&#xA;user_last_name,&#xA;user_first_name,&#xA;case when user_last_name is not null or user_first_name is not null then isnull(user_last_name,'') +' ' +isnull(user_first_name,'')&#xA;else SUBSTRING([user_mail], 0, charindex('@', [user_mail], 0)) end user_full_name,&#xA;[user_mail],&#xA;user_deleted,&#xA;SourceSystem,&#xA;v.user_display_name,&#xA;v.user_frozen,&#xA;v.user_phone&#xA;from [STG].[ds].[v_collab_cach_users] v&#xA;) S &#xA;ON  T.CacheAdUserID = S.cache_ad_user_id and T.SourceSystem='Collab'&#xA;WHEN MATCHED AND &#xA;(isnull(T.LastName,'') &lt;&gt; isnull(S.user_last_name,'') OR&#xA;isnull(T.FirstName,'') &lt;&gt; isnull(S.user_first_name,'') OR&#xA;isnull(T.Email,'') &lt;&gt; isnull(S.user_mail,'')  OR&#xA;isnull(T.isdeleted,'') &lt;&gt; isnull(S.user_deleted,'')  OR&#xA;isnull(T.FullName,'') &lt;&gt; isnull(S.user_full_name,'') OR&#xA;isnull(T.SourceSystem,'') &lt;&gt; isnull(S.SourceSystem,'') OR&#xA;isnull(T.isFrozen,'') &lt;&gt; isnull(S.user_frozen,'') OR&#xA;isnull(T.MobilePhone,'') &lt;&gt; isnull(S.user_phone,'') OR&#xA;isnull(T.DisplayName,'') &lt;&gt; isnull(S.user_display_name,'') &#xA;)&#xA;   THEN UPDATE SET T.LastName = S.user_last_name ,&#xA;   T.FirstName = S.user_first_name ,&#xA;   T.Email = S.user_mail ,&#xA;   T.FullName = S.user_full_name ,&#xA;   T.isdeleted = S.user_deleted,&#xA;   T.SourceSystem=S.SourceSystem,&#xA;   T.isFrozen=S.user_frozen,&#xA;   T.MobilePhone=S.user_phone,&#xA;   T.DisplayName=S.user_display_name&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (CacheAdUserID,LastName,FirstName,Email,FullName,isdeleted,SourceSystem,isFrozen,MobilePhone,DisplayName)&#xA;   VALUES (S.cache_ad_user_id,S.user_last_name,S.user_first_name,S.user_mail,S.user_full_name ,S.user_deleted,S.SourceSystem,S.user_frozen,S.user_phone,S.user_display_name);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\JPASS\D_Certificate"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{e2a3b091-b913-4c52-a1bd-e7d291fa4d3c}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_Certificate"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="4">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="--CertificateSK,CertificateID,CertificateTitle,CertificateDescription,CertificateConfidential,CertificateMedical,CertificateTypeLabel&#xA;MERGE DWH.DIM.D_Certificate AS T&#xA;USING (select certificate_id,certificate_title,&#xA;   certificate_description,certificate_medical, &#xA;   certificate_confidential,certificate_type_label&#xA;   from stg.ds.v_jpass_CERTIFICATION) S &#xA;ON  T.CertificateID = S.certificate_id&#xA;WHEN MATCHED AND (&#xA;isnull(T.certificatetitle,'') &lt;&gt; isnull(S.certificate_title,'') &#xA;OR isnull(T.certificatedescription,'') &lt;&gt; isnull(S.certificate_description,'')&#xA;OR isnull(T.certificatemedical,'') &lt;&gt; isnull(S.certificate_medical,'')&#xA;OR isnull(T.certificateconfidential,'') &lt;&gt; isnull(S.certificate_confidential,'')&#xA;OR isnull(T.certificatetypelabel,'') &lt;&gt; isnull(S.certificate_type_label,'')&#xA;)&#xA;   THEN UPDATE SET &#xA;   T.certificatetitle = S.certificate_title&#xA;   ,T.certificatedescription=S.certificate_description&#xA;   ,T.certificatemedical=S.certificate_medical&#xA;   ,T.certificateconfidential=S.certificate_confidential&#xA;   ,T.certificatetypelabel=S.certificate_type_label&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (CertificateID,CertificateTitle,CertificateDescription,CertificateConfidential,CertificateMedical,CertificateTypeLabel)&#xA;   VALUES (Certificate_ID,Certificate_Title,Certificate_Description,Certificate_Confidential,Certificate_Medical,Certificate_Type_Label);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\JPASS\D_Company"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{38a89a50-20b4-49be-8bae-c73f14b5c610}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_Company"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="5">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_Company AS T&#xA;USING (select distinct  company_id,company_name,company_type,left(company_creation_date,23) company_creation_date FROM STG.ds.v_jpass_sub_contractor&#xA;where company_id is not null ) S &#xA;ON  T.CompanyID = S.company_id&#xA;WHEN MATCHED AND (isnull(T.CompanyName,'') &lt;&gt; isnull(S.company_name,'') OR isnull(T.CompanyType,'') &lt;&gt; isnull(S.company_type,''))&#xA;   THEN UPDATE SET T.CompanyName = S.Company_Name,T.CompanyType=S.company_type&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (CompanyID,CompanyName,CompanyType,CreationDate)&#xA;   VALUES (S.company_id,S.company_name,S.company_type,S.company_creation_date);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\JPASS\D_ConstructionEquipement"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{7cc35d06-0ca4-48c1-95dd-4574c7ade169}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_ConstructionEquipement"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="6">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_ConstructionEquipement AS T&#xA;USING STG.ds.v_jpass_construction_equipement S &#xA;ON  T.EquipementID = S.ID&#xA;WHEN MATCHED AND &#xA;(isnull(T.EquipementName,'') &lt;&gt; isnull(S.name,'') OR &#xA;isnull(T.EquipementBrand,'') &lt;&gt; isnull(S.brand,'') OR &#xA;isnull(T.EquipementSerialNumber,'') &lt;&gt; isnull(S.serial_number,'') OR &#xA;isnull(T.EquipementTypeLabel,'') &lt;&gt; isnull(S.label,'') OR &#xA;isnull(T.EquipementType,'') &lt;&gt; isnull(S.type,'') OR &#xA;isnull(T.EquipementMatriculation,'') &lt;&gt; isnull(S.matriculation,'') OR &#xA;isnull(T.EquipementLifting,'') &lt;&gt; isnull(S.lifting_equip,'') OR &#xA;isnull(T.EquipementMoreInfo,'') &lt;&gt; isnull(S.more_information,'') OR &#xA;isnull(T.EquipementPhoto,'') &lt;&gt; isnull(S.photo,'') OR &#xA;isnull(T.EquipementQrCode,'') &lt;&gt; isnull(S.qr_code,'') OR &#xA;isnull(T.EquipementCreationDate,'9999-12-31') &lt;&gt; isnull(S.creation_date,'9999-12-31') OR &#xA;isnull(T.EquipementUpdateDate,'9999-12-31') &lt;&gt; isnull(S.update_date,'9999-12-31') OR &#xA;isnull(T.EquipementLongitude,'') &lt;&gt; isnull(S.longitude,'') OR &#xA;isnull(T.EquipementLatitude,'') &lt;&gt; isnull(S.latitude,'') OR &#xA;isnull(T.EquipementCompany,'') &lt;&gt; isnull(S.company,'') OR &#xA;isnull(T.EquipementSubcontractor,'') &lt;&gt; isnull(S.subcontractor,'') OR &#xA;isnull(T.EquipementLinkedAllContracts,'') &lt;&gt; isnull(S.linked_all_contracts,'') OR &#xA;isnull(T.EquipementConstructionName,'') &lt;&gt; isnull(S.construction_equipment_name,'')&#xA;)&#xA;   THEN UPDATE SET T.EquipementName = S.name ,&#xA;T.EquipementBrand = S.brand ,&#xA;T.EquipementSerialNumber = S.serial_number ,&#xA;T.EquipementTypeLabel = S.label ,&#xA;T.EquipementType = S.type ,&#xA;T.EquipementMatriculation = S.matriculation ,&#xA;T.EquipementLifting = S.lifting_equip ,&#xA;T.EquipementMoreInfo = S.more_information ,&#xA;T.EquipementPhoto = S.photo ,&#xA;T.EquipementQrCode = S.qr_code ,&#xA;T.EquipementCreationDate = S.creation_date ,&#xA;T.EquipementUpdateDate = S.update_date ,&#xA;T.EquipementLongitude = S.longitude ,&#xA;T.EquipementLatitude = S.latitude ,&#xA;T.EquipementCompany = S.company ,&#xA;T.EquipementSubcontractor = S.subcontractor ,&#xA;T.EquipementLinkedAllContracts = S.linked_all_contracts ,&#xA;T.EquipementConstructionName = S.construction_equipment_name &#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (EquipementID ,&#xA;EquipementName ,&#xA;EquipementBrand ,&#xA;EquipementSerialNumber ,&#xA;EquipementTypeLabel ,&#xA;EquipementType ,&#xA;EquipementMatriculation ,&#xA;EquipementLifting ,&#xA;EquipementMoreInfo ,&#xA;EquipementPhoto ,&#xA;EquipementQrCode ,&#xA;EquipementCreationDate ,&#xA;EquipementUpdateDate ,&#xA;EquipementLongitude ,&#xA;EquipementLatitude ,&#xA;EquipementCompany ,&#xA;EquipementSubcontractor ,&#xA;EquipementLinkedAllContracts ,&#xA;EquipementConstructionName )&#xA;   VALUES (S.id,&#xA;S.name,&#xA;S.brand,&#xA;S.serial_number,&#xA;S.label,&#xA;S.type,&#xA;S.matriculation,&#xA;S.lifting_equip,&#xA;S.more_information,&#xA;S.photo,&#xA;S.qr_code,&#xA;S.creation_date,&#xA;S.update_date,&#xA;S.longitude,&#xA;S.latitude,&#xA;S.company,&#xA;S.subcontractor,&#xA;S.linked_all_contracts,&#xA;S.construction_equipment_name)&#xA;;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\JPASS\D_EmployeeDetails"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{98735612-245e-4a38-a481-5a518dc21b60}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_EmployeeDetails"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="8">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_EmployeeDetails AS T&#xA;USING (select distinct  employee_id,employee_unique_reference,employee_type,employee_company_name&#xA;      ,employee_subcontractor,employee_job,employee_department,employee_country,employee_city&#xA;  FROM STG.ds.v_jpass_EMPLOYEE&#xA;where [employee_id] is not null ) S &#xA;ON  T.EmpID = S.employee_id&#xA;WHEN MATCHED AND &#xA;(isnull(T.EmpUniqueRef,'') &lt;&gt; isnull(S.employee_unique_reference,'') &#xA;OR isnull(T.EmpType,'') &lt;&gt; isnull(S.employee_type,'')&#xA;OR isnull(T.EmpCompanyName,'') &lt;&gt; isnull(S.employee_company_name,'')&#xA;OR isnull(T.EmpSubContractor,'') &lt;&gt; isnull(S.employee_subcontractor,'')&#xA;OR isnull(T.EmpDepartment,'') &lt;&gt; isnull(S.employee_department,'')&#xA;OR isnull(T.EmpCountry,'') &lt;&gt; isnull(S.employee_country,'')&#xA;OR isnull(T.EmpCity,'') &lt;&gt; isnull(S.employee_city,'')&#xA;)&#xA;   THEN UPDATE SET &#xA;T.EmpUniqueRef = S.employee_unique_reference , &#xA;T.EmpType = S.employee_type ,&#xA;T.EmpCompanyName = S.employee_company_name ,&#xA;T.EmpSubContractor = S.employee_subcontractor ,&#xA;T.EmpDepartment = S.employee_department ,&#xA;T.EmpCountry = S.employee_country ,&#xA;T.EmpCity = S.employee_city &#xA;&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (EmpID,EmpUniqueRef,EmpType,EmpCompanyName,EmpSubContractor,EmpJob,EmpDepartment,EmpCountry,EmpCity,StartDate)&#xA;   VALUES (S.employee_id ,S.employee_unique_reference ,S.employee_type ,S.employee_company_name,S.employee_subcontractor ,S.employee_job ,S.employee_department ,S.employee_country ,S.employee_city,cast(cast(getdate() as date) as datetime));" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\JPASS\D_Enumeration"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{bdc72380-89cb-419e-9e6a-870cdcdf9d06}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_Enumeration"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="9">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_Enumeration AS T&#xA;USING (SELECT 'JPass-'+cast([id] as nvarchar(10)) EnumID&#xA;    ,[id]&#xA;      ,[type] EnumType&#xA;      ,[code] EnumCode&#xA;      ,[label] EnumLabel&#xA;  FROM [STG].[dS].[jpass_enumeration]&#xA;union&#xA;  SELECT 'Collab-'+cast([id] as nvarchar(10)) EnumID&#xA;   , [id]&#xA;      ,[type]&#xA;      ,[code]&#xA;      ,[label]&#xA;&#xA;  FROM [STG].[ds].[collab_enumeration]&#xA;  ) S &#xA;ON  T.EnumID = S.EnumID &#xA;WHEN MATCHED AND (isnull(T.Type,'') &lt;&gt; isnull(S.enumType,'') or isnull(T.Code,'') &lt;&gt; isnull(S.enumCode,'') or isnull(T.Label,'') &lt;&gt; isnull(S.EnumLabel,''))&#xA;   THEN UPDATE SET T.Type = S.EnumType, T.Code = S.EnumCode, T.Label = S.EnumLabel &#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (enumID,ID,Type,Code,Label)&#xA;   VALUES (S.enumID,S.ID,S.EnumType,S.EnumCode,S.EnumLabel);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\JPASS\D_Inspection"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{3eaea8af-3777-4c33-a614-728fcf27f8a0}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_Inspection"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="6">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_Inspection AS T&#xA;USING STG.ds.v_jpass_inspection S &#xA;ON  T.InspectionID = S.inspections_id&#xA;WHEN MATCHED AND &#xA;(isnull(T.InspectionName,'') &lt;&gt; isnull(S.name,'') OR &#xA;isnull(T.InspectionLabel,'') &lt;&gt; isnull(S.label,'') &#xA;)&#xA;   THEN UPDATE SET T.InspectionName = S.name ,&#xA;T.InspectionLabel = S.label &#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (InspectionID ,&#xA;InspectionName ,&#xA;InspectionLabel  )&#xA;   VALUES (S.inspections_id,&#xA;S.name,&#xA;S.label)&#xA;;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\JPASS\D_ScannedOpType"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{8bedc267-c90e-45a5-b516-57f28815149d}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_ScannedOpType"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="10">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_ScannedOpType AS T&#xA;USING (select distinct [scanned_operation_type_code],[scanned_operation_type]&#xA;  FROM [STG].[dS].v_jpass_scan_history p&#xA;  where [scanned_operation_type_code]&lt;&gt;'' and [scanned_operation_type_code] is not null) S &#xA;ON  T.ScannedOpTypeID = S.scanned_operation_type_code&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (ScannedOpTypeID,ScannedOpType)&#xA;   VALUES (S.scanned_operation_type_code ,S.scanned_operation_type);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\JPASS\D_TaskHistory"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{54164114-6BF1-473C-84D4-535D64D250BF}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_TaskHistory"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="11">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_TaskHistory AS T&#xA;USING (  SELECT [id] TaskHistoryID&#xA;      ,[task] TaskHistory&#xA;      ,[work_area] WorkArea&#xA;      ,[detail] Detail&#xA;  FROM [STG].[dS].[jpass_task_history]&#xA;) S &#xA;ON  T.TaskHistoryID = S.TaskHistoryID&#xA;WHEN MATCHED AND &#xA;(isnull(T.TaskHistory,'') &lt;&gt; isnull(S.TaskHistory,'') OR&#xA;isnull(T.WorkArea,'') &lt;&gt; isnull(S.WorkArea,'') OR&#xA;isnull(T.Detail,'') &lt;&gt; isnull(S.Detail,'')&#xA;)&#xA;   THEN UPDATE SET T.TaskHistory = S.TaskHistory ,&#xA;   T.WorkArea = S.WorkArea ,&#xA;   T.Detail = S.Detail&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (TaskHistoryID,TaskHistory,WorkArea,Detail)&#xA;   VALUES (S.TaskHistoryID,S.TaskHistory,S.WorkArea,S.Detail);&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\JPASS\D_Trainer"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{6c616ea9-99fa-4cdc-8ab5-dd865a8ddcdb}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_Trainer"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="12">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_Trainer AS T&#xA;USING (SELECT distinct training_trainer FROM STG.ds.v_jpass_training&#xA;where training_trainer is not null and training_trainer&lt;&gt; '') S &#xA;ON  T.Trainer = S.training_trainer&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (Trainer)&#xA;   VALUES (S.training_trainer);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\JPASS\D_Training"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{10b38f98-28f3-4c74-b786-27350f5dc49c}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_Training"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="13">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_TRAINING AS T&#xA;USING (select distinct training_id ,training_title,Training_Description&#xA;FROM STG.ds.V_jpass_training_title&#xA;where training_id is not null) S &#xA;ON  T.TrainingID = S.Training_ID&#xA;WHEN MATCHED AND &#xA;(isnull(T.TrainingTitle,'') &lt;&gt; isnull(S.Training_Title,'') OR&#xA;isnull(T.TrainingDescription,'') &lt;&gt; isnull(S.Training_Description,'')&#xA;)&#xA;   THEN UPDATE SET T.TrainingTitle = S.Training_Title,&#xA;   T.TrainingDescription=S.Training_Description&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (TrainingID,TrainingTitle,TrainingDescription)&#xA;   VALUES (S.Training_ID,S.Training_Title,Training_Description)&#xA;;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\JPASS\D_TrainingCategory"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{dc4fcc21-23d2-410b-83bb-b27444ef6d94}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_TrainingCategory"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="14">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_TrainingCategory AS T&#xA;USING (select distinct  employee_category_id,employee_category&#xA;FROM STG.dS.v_jpass_training&#xA;where employee_category_id is not null) S &#xA;ON  T.CategoryCode = S.employee_category_id&#xA;WHEN MATCHED AND isnull(T.CategoryLabel,'') &lt;&gt; isnull(S.employee_category,'') &#xA;   THEN UPDATE SET T.CategoryLabel = S.employee_category&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (CategoryCode,CategoryLabel)&#xA;   VALUES (S.employee_category_id,S.employee_category);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\JPASS\D_ValidationStatus"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{e35ae8af-dad6-4239-9258-7e5137c25556}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_ValidationStatus"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="15">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_ValidationStatus AS T&#xA;USING (&#xA;SELECT distinct training_validation_status_code,training_validation_status FROM STG.dS.v_jpass_training&#xA;where training_validation_status_code is not null&#xA;union&#xA;SELECT distinct behavior_validation_status_code,behavior_validation_status FROM STG.ds.v_jpass_behavior&#xA;where behavior_validation_status_code is not null&#xA;union&#xA;SELECT distinct CERTIFICATE_validation_status_code,CERTIFICATE_validation_status FROM STG.ds.v_jpass_emp_certificates&#xA;where CERTIFICATE_validation_status_code is not null&#xA;) S &#xA;ON  T.ValidationID = S.training_validation_status_code&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (ValidationID,ValidationStatus)&#xA;   VALUES (S.training_validation_status_code ,S.training_validation_status);&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\JPASS\D_Warning"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{f760a513-343a-43dd-9164-3ba4abca8c68}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_Warning"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="6">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_Warning AS T&#xA;USING STG.dS.v_jpass_warning S &#xA;ON  T.WarningID = S.Warning_ID&#xA;WHEN MATCHED AND &#xA;(isnull(T.WarningName,'') &lt;&gt; isnull(S.warning_name,'') OR &#xA;isnull(T.WarningType,'') &lt;&gt; isnull(S.warning_type,'') &#xA;)&#xA;   THEN UPDATE SET T.WarningName = S.warning_name ,&#xA;T.WarningType = S.warning_type &#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (WarningID ,&#xA;WarningName ,&#xA;WarningType  )&#xA;   VALUES (S.warning_id,&#xA;S.warning_name,&#xA;S.warning_type)&#xA;;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\JPASS\D_WorkOrder"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{220cae89-20d6-41dd-b2de-f54b4e33d088}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_WorkOrder"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="7">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_WorkOrder AS T&#xA;USING (SELECT distinct number as WorkOrderNumber&#xA;  FROM stg.ds.collab_work_order&#xA;  ) S &#xA;ON  T.WorkOrderNumber = S.WorkOrderNumber &#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (WorkOrderNumber)&#xA;   VALUES (S.WorkOrderNumber);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\JPASS\Emp Comments"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{c7fc3398-376a-4271-8e36-9302f5fb2925}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Emp Comments"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="16">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="&#xA;MERGE DWH.DIM.D_EmpComments AS T&#xA;USING (select emp_training_id EmpCommentID,&#xA;  training_validation_comment ValidationComment,&#xA;  training_comment Comment&#xA;  from [STG].[dS].V_jpass_TRAINING&#xA;  where ISNULL(training_validation_comment,training_comment) is not null&#xA;  ) S &#xA;ON  T.EmpCommentID = S.EmpCommentID&#xA;WHEN MATCHED AND (isnull(T.ValidationComment,'') &lt;&gt; isnull(S.ValidationComment,'') &#xA;or isnull(T.Comment,'') &lt;&gt; isnull(S.Comment,'') &#xA;)&#xA;THEN UPDATE SET T.ValidationComment = S.ValidationComment ,T.Comment = S.Comment&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (EmpCommentID,ValidationComment,Comment)&#xA;   VALUES (S.EmpCommentID,S.ValidationComment,S.Comment);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\JPASS.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{c3cae082-e8b2-4833-858e-30dbbaa23cd2}"
          DTS:From="Package\JPASS\D_Inspection"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\JPASS\D_Warning" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\JPASS.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{bb07077f-63ec-44da-bdd2-93545f0df2a7}"
          DTS:From="Package\JPASS\D_Warning"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\JPASS\D_ConstructionEquipement" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\P6 DIM"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{671cb79c-2c5b-4184-8dd5-ce8705c168a9}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="P6 DIM">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\P6 DIM\D_ActivityHierarchy"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{a12c4ea0-6685-4920-845e-aa27239ac39e}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_ActivityHierarchy"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_ActivityHierarchy AS T&#xA;USING (SELECT distinct &#xA;[Id] as ActivityHierarchyID&#xA;,[objectid] ActivityHierarchyObjectID&#xA;,[status] ActivityStatus&#xA;,[name] ActivityName&#xA;,[type] ActivityType&#xA;,PrimaryResourceName,&#xA;acaG02.activitycodedescription gzeroTwoSteps,&#xA;acaG12.activitycodedescription gtwelveSupplierSubs,&#xA;acaG16.activitycodedescription gsixteenDiscipline,&#xA;acaG18.activitycodedescription geighteenEarlyWarning,&#xA;acaG18a.activitycodedescription geighteenWarnActIdentifier,&#xA;acaG10.activitycodedescription gtenOcpfieldMilestone&#xA;FROM [STG].[P6].[ACTIVITY] a&#xA;LEFT JOIN [STG].[P6].[ACTIVITYCODEASSIGNMENT] acaG02 on a.objectid = acaG02.activityobjectid and a.projectobjectid=acaG02.projectobjectid and acaG02.activitycodetypename = 'G02 - JSTEPS'&#xA;LEFT JOIN [STG].[P6].[ACTIVITYCODEASSIGNMENT] acaG12 on a.objectid = acaG12.activityobjectid and a.projectobjectid=acaG12.projectobjectid and acaG12.activitycodetypename = 'G12 - Supplier / Subs'&#xA;LEFT JOIN [STG].[P6].[ACTIVITYCODEASSIGNMENT] acaG16 on a.objectid = acaG16.activityobjectid and a.projectobjectid=acaG16.projectobjectid and acaG16.activitycodetypename = 'G16 - Discipline'&#xA;LEFT JOIN [STG].[P6].[ACTIVITYCODEASSIGNMENT] acaG18 on a.objectid = acaG18.activityobjectid and a.projectobjectid=acaG18.projectobjectid and acaG18.activitycodetypename = 'G18 - Early Warning'&#xA;LEFT JOIN [STG].[P6].[ACTIVITYCODEASSIGNMENT] acaG18a on a.objectid = acaG18a.activityobjectid and a.projectobjectid=acaG18a.projectobjectid and acaG18a.activitycodetypename = 'G18a - Warning Activity Identifier'&#xA;LEFT JOIN [STG].[P6].[ACTIVITYCODEASSIGNMENT] acaG10 on a.objectid = acaG10.activityobjectid and a.projectobjectid=acaG10.projectobjectid and acaG10.activitycodetypename = 'G10 - OCP Field - Milestones'&#xA;) S &#xA;ON  T.ActivityHierarchyID = S.ActivityHierarchyID and  T.ActivityHierarchyObjectID=S.ActivityHierarchyObjectID&#xA;WHEN MATCHED AND &#xA;(isnull(T.ActivityStatus,'') &lt;&gt; isnull(S.ActivityStatus,'') OR&#xA;isnull(T.ActivityName,'') &lt;&gt; isnull(S.ActivityName,'') OR&#xA;isnull(T.PrimaryResourceName,'') &lt;&gt; isnull(S.PrimaryResourceName,'') OR &#xA;isnull(T.ActivityType,'') &lt;&gt; isnull(S.ActivityType,'') OR &#xA;isnull(T.gzeroTwoSteps,'') &lt;&gt; isnull(S.gzeroTwoSteps,'') OR &#xA;isnull(T.gtwelveSupplierSubs,'') &lt;&gt; isnull(S.gtwelveSupplierSubs,'') OR &#xA;isnull(T.gsixteenDiscipline,'') &lt;&gt; isnull(S.gsixteenDiscipline,'') OR &#xA;isnull(T.geighteenWarnActIdentifier,'') &lt;&gt; isnull(S.geighteenWarnActIdentifier,'') OR &#xA;isnull(T.geighteenEarlyWarning,'') &lt;&gt; isnull(S.geighteenEarlyWarning,'') OR&#xA;isnull(T.gtenOcpfieldMilestone,'') &lt;&gt; isnull(S.gtenOcpfieldMilestone,'') &#xA;&#xA;)&#xA;   THEN UPDATE SET T.ActivityType = S.ActivityType ,T.ActivityName = S.ActivityName ,T.ActivityStatus = S.ActivityStatus , T.gtenOcpfieldMilestone=S.gtenOcpfieldMilestone,&#xA;      T.gzeroTwoSteps = S.gzeroTwoSteps , T.gtwelveSupplierSubs = S.gtwelveSupplierSubs , T.gsixteenDiscipline = S.gsixteenDiscipline &#xA;&#x9;  , T.geighteenWarnActIdentifier = S.geighteenWarnActIdentifier,T.geighteenEarlyWarning=S.geighteenEarlyWarning,T.PrimaryResourceName=S.PrimaryResourceName&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (gtenOcpfieldMilestone,PrimaryResourceName,ActivityHierarchyID,ActivityHierarchyObjectID,ActivityStatus,ActivityName,ActivityType,gzeroTwoSteps,gtwelveSupplierSubs,gsixteenDiscipline,geighteenWarnActIdentifier,geighteenEarlyWarning)&#xA;   VALUES (s.gtenOcpfieldMilestone,S.PrimaryResourceName,S.ActivityHierarchyID,S.ActivityHierarchyObjectID,S.ActivityStatus,S.ActivityName,S.ActivityType,S.gzeroTwoSteps,S.gtwelveSupplierSubs,S.gsixteenDiscipline,S.geighteenWarnActIdentifier,S.geighteenEarlyWarning);&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\P6 DIM\D_WbsHierarchy"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{d1984ca6-0281-4237-82b8-6174fed25b75}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_WbsHierarchy"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_WbsHierarchy AS T&#xA;USING ( select distinct  &#xA;childobjectid,&#xA;childname,&#xA;fullpathname,&#xA;p.id as project_number,&#xA;h.childprojectid&#xA;from stg.p6.WBSHIERARCHY h&#xA;inner join stg.p6.PROJECT p on p.objectid = h.childprojectid&#xA;) S &#xA;ON  T.WbsHierarchyID = S.childobjectid and T.childprojectid=S.childprojectid&#xA;WHEN MATCHED AND &#xA;(isnull(T.WbsHierarchyName,'') &lt;&gt; isnull(S.childname,'') OR&#xA;isnull(T.ProjectNumber,'') &lt;&gt; isnull(S.project_number,'') OR&#xA;isnull(T.FullPathName,'') &lt;&gt; isnull(S.FullPathName,'') &#xA;)&#xA;   THEN UPDATE SET T.WbsHierarchyName = S.childname ,T.ProjectNumber = S.project_number ,T.FullPathName = S.FullPathName &#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (WbsHierarchyID,WbsHierarchyName,ProjectNumber,FullPathName,childprojectid)&#xA;   VALUES (S.childobjectid,S.childname,S.project_number,S.FullPathName,S.childprojectid);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\PROCORE DIM"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{AF13EF36-72AC-4E5F-8201-DE1F9BFD856D}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="PROCORE DIM">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\PROCORE DIM\Data Flow Task"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{AFD4A1BA-3C67-4B88-9DD7-9684B1029996}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\PROCORE DIM\Data Flow Task\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[DIM].[D_ProcUser]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\PROCORE DIM\Data Flow Task\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[MACAS01-DBI01\BIDEV01.DWH.bi_user]"
                      connectionManagerRefId="Package.ConnectionManagers[MACAS01-DBI01\BIDEV01.DWH.bi_user]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\PROCORE DIM\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\PROCORE DIM\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Usertype]"
                          cachedDataType="wstr"
                          cachedLength="1"
                          cachedName="Usertype"
                          externalMetadataColumnId="Package\PROCORE DIM\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UserType]"
                          lineageId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[Usertype]" />
                        <inputColumn
                          refId="Package\PROCORE DIM\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[user_id]"
                          cachedDataType="wstr"
                          cachedLength="1000"
                          cachedName="user_id"
                          externalMetadataColumnId="Package\PROCORE DIM\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UserID]"
                          lineageId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[user_id]" />
                        <inputColumn
                          refId="Package\PROCORE DIM\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[name]"
                          cachedDataType="wstr"
                          cachedLength="1000"
                          cachedName="name"
                          externalMetadataColumnId="Package\PROCORE DIM\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UserName]"
                          lineageId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[name]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\PROCORE DIM\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UserSK]"
                          dataType="i4"
                          name="UserSK" />
                        <externalMetadataColumn
                          refId="Package\PROCORE DIM\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UserID]"
                          dataType="wstr"
                          length="250"
                          name="UserID" />
                        <externalMetadataColumn
                          refId="Package\PROCORE DIM\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UserLogin]"
                          dataType="wstr"
                          length="250"
                          name="UserLogin" />
                        <externalMetadataColumn
                          refId="Package\PROCORE DIM\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UserName]"
                          dataType="wstr"
                          length="250"
                          name="UserName" />
                        <externalMetadataColumn
                          refId="Package\PROCORE DIM\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UserCompanyName]"
                          dataType="wstr"
                          length="250"
                          name="UserCompanyName" />
                        <externalMetadataColumn
                          refId="Package\PROCORE DIM\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UserType]"
                          dataType="wstr"
                          length="1"
                          name="UserType" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\PROCORE DIM\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\PROCORE DIM\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\PROCORE DIM\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\PROCORE DIM\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\PROCORE DIM\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\PROCORE DIM\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\PROCORE DIM\Data Flow Task\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select distinct 
  [user_id]   ,[name],N'-' Usertype
       FROM [STG].[PROCORE].[ProjectRoles] u
	   where not exists ( select * from DWH.DIM.D_PROCUSER d where d.UserID=u.user_id)</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[MACAS01-DBI01\BIDEV01.DWH.bi_user]"
                      connectionManagerRefId="Package.ConnectionManagers[MACAS01-DBI01\BIDEV01.DWH.bi_user]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[user_id]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[user_id]"
                          length="1000"
                          lineageId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[user_id]"
                          name="user_id"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[name]"
                          length="1000"
                          lineageId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[name]"
                          name="name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[Usertype]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Usertype]"
                          length="1"
                          lineageId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].Columns[Usertype]"
                          name="Usertype"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[user_id]"
                          dataType="wstr"
                          length="1000"
                          name="user_id" />
                        <externalMetadataColumn
                          refId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[name]"
                          dataType="wstr"
                          length="1000"
                          name="name" />
                        <externalMetadataColumn
                          refId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Usertype]"
                          dataType="wstr"
                          length="1"
                          name="Usertype" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[user_id]"
                          dataType="wstr"
                          length="1000"
                          lineageId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[user_id]"
                          name="user_id" />
                        <outputColumn
                          refId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[name]"
                          dataType="wstr"
                          length="1000"
                          lineageId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[name]"
                          name="name" />
                        <outputColumn
                          refId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Usertype]"
                          dataType="wstr"
                          length="1"
                          lineageId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Usertype]"
                          name="Usertype" />
                        <outputColumn
                          refId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\PROCORE DIM\Data Flow Task.Paths[OLE DB Source Output]"
                  endId="Package\PROCORE DIM\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="OLE DB Source Output"
                  startId="Package\PROCORE DIM\Data Flow Task\OLE DB Source.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PROCORE DIM\D_Attachment"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{F2B5985A-C61D-403F-ADA7-CC19E35CCC09}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_Attachment"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{7EFC0C6C-C380-4C43-8E7A-9FACF2484208}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_Attachment AS T&#xA;USING (  select distinct [attachments_id]  AttachmentID&#xA;      ,[attachments_url] AttachmentURL&#xA;&#x9;  ,[attachments_filename] AttachmentFileName&#xA;  FROM [STG].[PROCORE].[ContractPayment] &#xA;  where [attachments_id] is not null&#xA;) S &#xA;ON  T.AttachmentID = S.AttachmentID&#xA;WHEN MATCHED AND &#xA;(&#xA;isnull(t.AttachmentID,'') &lt;&gt; isnull(s.AttachmentID,'') OR &#xA;isnull(t.AttachmentURL,'') &lt;&gt; isnull(s.AttachmentURL,'') OR &#xA;isnull(t.AttachmentFileName,'') &lt;&gt; isnull(s.AttachmentFileName,'') &#xA;)&#xA;   THEN UPDATE SET &#xA;T.AttachmentID = S.AttachmentID ,&#xA;T.AttachmentURL = S.AttachmentURL ,&#xA;T.AttachmentFileName = S.AttachmentFileName &#xA;&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (AttachmentID,AttachmentURL,AttachmentFileName)&#xA;   VALUES (S.AttachmentID,S.AttachmentURL,S.AttachmentFileName);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PROCORE DIM\D_BankGuarantee"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{D1FB2B58-BD0C-4F7E-9A35-0DDC65871965}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_BankGuarantee"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE [DWH].[DIM].[D_BankGuarantee] AS T&#xA;USING (&#xA;&#xA;select distinct&#xA;&#x9;&#x9;[id] BGID&#xA;&#x9;&#x9;,[bank_guarantee_type] BKType&#xA;&#x9;&#x9;,[milestone] BKMilestone&#xA;&#x9;&#x9;,[description] BKDescription&#xA;&#x9;&#x9;,[position_correspondance] BKPositionCorresp&#xA;&#x9;&#x9;,[title] BKTitle&#xA;&#x9;&#x9;,[bank_guarantee_provider] BKProvider&#xA;&#x9;&#x9;,[contractor] BKContractor&#xA;&#x9;&#x9;,[commitment_number] BKCommitmentNumber&#xA;&#x9;&#x9;,[reference] BKReference&#xA;&#x9;&#x9;,[currency] BKCurrency&#xA;&#x9;&#x9;&#xA;&#x9;FROM [STG].[PROCORE].[v_correspondance]  c&#xA;  where title_generic_tool='Bank Guarantee'&#xA;) S &#xA;ON  T.BGID = S.BGID&#xA;WHEN MATCHED AND &#xA;(&#xA;isnull(t.[BKType],'') &lt;&gt; isnull(s.[BKType],'') OR &#xA;isnull(t.[BKMilestone],'') &lt;&gt; isnull(s.[BKMilestone],'') OR &#xA;isnull(t.[BKDescription],'') &lt;&gt; isnull(s.[BKDescription],'') OR &#xA;isnull(t.[BKPositionCorresp],'') &lt;&gt; isnull(s.[BKPositionCorresp],'') OR &#xA;isnull(t.[BKTitle],'') &lt;&gt; isnull(s.[BKTitle],'') OR &#xA;isnull(t.[BKProvider],'') &lt;&gt; isnull(s.[BKProvider],'') OR &#xA;isnull(t.[BKContractor],'') &lt;&gt; isnull(s.[BKContractor],'') OR &#xA;isnull(t.[BKCommitmentNumber],'') &lt;&gt; isnull(s.[BKCommitmentNumber],'') OR &#xA;isnull(t.[BKReference],'') &lt;&gt; isnull(s.[BKReference],'') OR &#xA;isnull(t.[BKCurrency],'') &lt;&gt; isnull(s.[BKCurrency],'') &#xA;)&#xA;   THEN UPDATE SET &#xA;   T.[BKType] = S.[BKType] ,&#xA;T.[BKMilestone] = S.[BKMilestone] ,&#xA;T.[BKDescription] = S.[BKDescription] ,&#xA;T.[BKPositionCorresp] = S.[BKPositionCorresp] ,&#xA;T.[BKTitle] = S.[BKTitle] ,&#xA;T.[BKProvider] = S.[BKProvider] ,&#xA;T.[BKContractor] = S.[BKContractor] ,&#xA;T.[BKCommitmentNumber] = S.[BKCommitmentNumber] ,&#xA;T.[BKReference] = S.[BKReference] ,&#xA;T.[BKCurrency] = S.[BKCurrency]&#xA;&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT ([BGID]&#x9;,&#xA;[BKType]&#x9;,&#xA;[BKMilestone]&#x9;,&#xA;[BKDescription]&#x9;,&#xA;[BKPositionCorresp]&#x9;,&#xA;[BKTitle]&#x9;,&#xA;[BKProvider]&#x9;,&#xA;[BKContractor]&#x9;,&#xA;[BKCommitmentNumber]&#x9;,&#xA;[BKReference]&#x9;,&#xA;[BKCurrency]&#x9;&#xA;&#x9;)&#xA;   VALUES (S.[BGID],&#xA;S.[BKType],&#xA;S.[BKMilestone],&#xA;S.[BKDescription],&#xA;S.[BKPositionCorresp],&#xA;S.[BKTitle],&#xA;S.[BKProvider],&#xA;S.[BKContractor],&#xA;S.[BKCommitmentNumber],&#xA;S.[BKReference],&#xA;S.[BKCurrency]&#xA;);&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PROCORE DIM\D_ChangeOrderRequest"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{C1776DA8-A072-46A3-8E5E-9FC083397885}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_ChangeOrderRequest"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_ChangeOrderRequest AS T&#xA;USING (  SELECT distinct [change_order_request_id] CORID&#xA;      ,[change_order_request_title] CORTitle&#xA;      ,[change_order_package_title] COPTitle&#xA;      ,[potential_change_order_acronym_number] CORPotAcrNumber&#xA;      ,[change_order_request_acronym_number] CORAcrNumber&#xA;      ,[change_order_package_acronym_number] COPAcrNumber&#xA;      ,[change_order_tiers] COTiers     &#xA;  FROM [STG].[PROCORE].[variation] c&#xA;  where isnull([change_order_request_id],'')&lt;&gt;''&#xA;&#xA;) S &#xA;ON  T.CORID = S.CORID&#xA;WHEN MATCHED AND &#xA;(isnull(T.CORTitle,'') &lt;&gt; isnull(S.CORTitle,'') OR&#xA;isnull(T.COPTitle,'') &lt;&gt; isnull(S.COPTitle,'') OR&#xA;isnull(T.CORPotAcrNumber,'') &lt;&gt; isnull(S.CORPotAcrNumber,'') OR&#xA;isnull(T.CORAcrNumber,'') &lt;&gt; isnull(S.CORAcrNumber,'') OR&#xA;isnull(T.COPAcrNumber,'') &lt;&gt; isnull(S.COPAcrNumber,'') OR&#xA;isnull(T.COTiers,'') &lt;&gt; isnull(S.COTiers,'') &#xA;)&#xA;   THEN UPDATE SET T.CORTitle = S.CORTitle ,&#xA;   T.COPTitle = S.COPTitle ,&#xA;   T.CORPotAcrNumber = S.CORPotAcrNumber,&#xA;   T.CORAcrNumber=S.CORAcrNumber,&#xA;   T.COPAcrNumber=S.COPAcrNumber,&#xA;   T.COTiers=S.COTiers&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (CORID,CORTitle,COPTitle,CORPotAcrNumber,CORAcrNumber,COPAcrNumber,COTiers)&#xA;   VALUES (S.CORID,S.CORTitle,S.COPTitle,S.CORPotAcrNumber,S.CORAcrNumber,S.COPAcrNumber,S.COTiers);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PROCORE DIM\D_ChangeRequest"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{98E42F8C-E93E-48D1-AAE9-D3EDB606E6BB}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_ChangeRequest"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="4">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="&#xA;MERGE DWH.DIM.D_ChangeRequest AS T&#xA;USING (  select distinct &#xA;&#x9;C.id CRID&#xA;&#x9;,c.description CRDescription&#xA;&#x9;,c.commitment_number CRCommitmentNumber&#xA;&#x9;,c.change_justification CRChangeJustif&#xA;&#x9;,c.position_correspondance CRPosCorresp&#xA;&#x9;,c.title CRTitle&#xA;&#x9;,Currency&#xA;FROM [STG].[PROCORE].[v_correspondance] c&#xA;where title_generic_tool='Change Request'&#xA;) S &#xA;ON  T.CRID = S.CRID&#xA;WHEN MATCHED AND &#xA;(&#xA;isnull(t.CRPosCorresp,'') &lt;&gt; isnull(s.CRPosCorresp,'') OR &#xA;isnull(t.CRTitle,'') &lt;&gt; isnull(s.CRTitle,'') OR &#xA;isnull(t.CRDescription,'') &lt;&gt; isnull(s.CRDescription,'') OR &#xA;isnull(t.CRCommitmentNumber,'') &lt;&gt; isnull(s.CRCommitmentNumber,'') OR &#xA;isnull(t.CRChangeJustif,'') &lt;&gt; isnull(s.CRChangeJustif,'') OR &#xA;isnull(t.Currency,'') &lt;&gt; isnull(s.Currency,'') &#xA;)&#xA;   THEN UPDATE SET &#xA;&#x9;T.CRPosCorresp= S.CRPosCorresp,&#xA;&#x9;T.CRTitle= S.CRTitle,&#xA;&#x9;T.CRDescription= S.CRDescription,&#xA;&#x9;T.CRCommitmentNumber= S.CRCommitmentNumber,&#xA;&#x9;T.CRChangeJustif= S.CRChangeJustif,&#xA;&#x9;T.Currency= S.Currency&#xA;&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (CRID&#x9;,CRPosCorresp&#x9;,CRTitle&#x9;,CRDescription&#x9;,CRCommitmentNumber&#x9;,CRChangeJustif&#x9;,Currency&#x9;&#xA;)&#xA;   VALUES (s.CRID&#x9;,s.CRPosCorresp&#x9;,s.CRTitle&#x9;,s.CRDescription&#x9;,s.CRCommitmentNumber&#x9;,s.CRChangeJustif&#x9;,s.Currency&#x9;);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PROCORE DIM\D_CorresDetail"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{2D3AFB07-89C0-4343-9F5F-15A6D5AF6F9C}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_CorresDetail"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="5">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_CorrespDetail AS T&#xA;USING (  &#xA;&#xA;select *&#xA;from (&#xA;SELECT distinct &#xA;&#x9;&#x9;id CorrespID,&#xA;      [position_correspondance] CorrespPosition&#xA;      ,[private] isPrivate&#xA;      ,[status] CorrespStatus&#xA;      ,[title] CorrespTitle&#xA;      ,[unformatted_position] CorrespUnformPosition&#xA;&#x9;  ,[description] CorrespDescription&#xA;&#x9;  ,Commitment_Number CommitmentNumber&#xA;&#x9;  ,Area CorrespArea&#xA;&#x9;  ,Question_box CorrespQuestionBox&#xA;&#x9;  ,Importance CorrespImportance&#xA;&#x9;  ,Replier_name CorrespReplierName&#xA;&#x9;  ,Contractor CorrespContractor&#xA;&#x9;  ,Comment CorrespComment&#xA;&#x9;  ,Answer CorrespAnswer&#xA;&#x9;  ,ROW_NUMBER() over(partition by id order by Commitment_Number desc) ord&#xA;  FROM [STG].[PROCORE].[v_correspondance]&#xA; where  title_generic_tool in ('Letter','Request For Information')&#xA;)x where x.ord&gt;0&#xA;&#xA;) S &#xA;ON  T.CorrespID = S.CorrespID&#xA;WHEN MATCHED AND &#xA;(isnull(T.CommitmentNumber,'') &lt;&gt; isnull(S.CommitmentNumber,'') OR&#xA;isnull(T.CorrespArea,'') &lt;&gt; isnull(S.CorrespArea,'') OR&#xA;isnull(T.CorrespQuestionBox,'') &lt;&gt; isnull(S.CorrespQuestionBox,'') OR&#xA;isnull(T.CorrespImportance,'') &lt;&gt; isnull(S.CorrespImportance,'') OR&#xA;isnull(T.CorrespPosition,'') &lt;&gt; isnull(S.CorrespPosition,'') OR&#xA;isnull(T.CorrespReplierName,'') &lt;&gt; isnull(S.CorrespReplierName,'') OR&#xA;isnull(T.CorrespContractor,'') &lt;&gt; isnull(S.CorrespContractor,'') OR&#xA;isnull(T.CorrespComment,'') &lt;&gt; isnull(S.CorrespComment,'') OR&#xA;isnull(T.CorrespAnswer,'') &lt;&gt; isnull(S.CorrespAnswer,'') OR&#xA;isnull(T.isPrivate,'') &lt;&gt; isnull(S.isPrivate,'') OR&#xA;isnull(T.CorrespStatus,'') &lt;&gt; isnull(S.CorrespStatus,'') OR&#xA;isnull(T.CorrespTitle,'') &lt;&gt; isnull(S.CorrespTitle,'') OR&#xA;isnull(T.CorrespUnformPosition,'') &lt;&gt; isnull(S.CorrespUnformPosition,'') OR&#xA;isnull(T.CorrespDescription,'') &lt;&gt; isnull(S.CorrespDescription,'') &#xA;)&#xA;   THEN UPDATE SET T.CorrespPosition = S.CorrespPosition ,&#xA;   T.isPrivate = S.isPrivate,&#xA;   T.CorrespStatus = S.CorrespStatus,&#xA;   T.CorrespTitle = S.CorrespTitle,&#xA;   T.CorrespUnformPosition = S.CorrespUnformPosition,&#xA;   T.CorrespDescription = S.CorrespDescription,&#xA;   T.CommitmentNumber=S.CommitmentNumber,&#xA;   T.CorrespArea=S.CorrespArea,&#xA;   T.CorrespQuestionBox=S.CorrespQuestionBox,&#xA;   T.CorrespImportance=S.CorrespImportance,&#xA;   T.CorrespReplierName=S.CorrespReplierName,&#xA;   T.CorrespContractor=S.CorrespContractor,&#xA;   T.CorrespComment=S.CorrespComment,&#xA;   T.CorrespAnswer=S.CorrespAnswer&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (CorrespID,CorrespPosition,CorrespStatus&#xA;,CorrespTitle,CorrespUnformPosition,CorrespDescription,isPrivate,CommitmentNumber,CorrespArea,CorrespQuestionBox,CorrespImportance,CorrespReplierName,CorrespContractor,CorrespComment,CorrespAnswer)&#xA;   VALUES (S.CorrespID,S.CorrespPosition,S.CorrespStatus&#xA;,S.CorrespTitle,S.CorrespUnformPosition,S.CorrespDescription,S.isPrivate,S.CommitmentNumber,S.CorrespArea,S.CorrespQuestionBox,S.CorrespImportance,S.CorrespReplierName,S.CorrespContractor,S.CorrespComment,S.CorrespAnswer);&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PROCORE DIM\D_CorrespType"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{0D13AC1A-9C38-47BC-994D-2F34C2050EA3}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_CorrespType"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="6">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_CorrespType AS T&#xA;USING (  SELECT distinct [id_generic_tool] CorrespTypeID&#xA;      ,case when [abbreviation_generic_tool] is null and [title_generic_tool]='Request For Information'&#xA;&#x9;  then N'RFI'&#xA;&#x9;  Else [abbreviation_generic_tool] end as CorrespType&#xA;      ,[title_generic_tool] CorrespTypeName&#xA;      &#xA;  FROM [STG].[PROCORE].[correspondance]&#xA;&#xA;&#xA;) S &#xA;ON  T.CorrespTypeID = S.CorrespTypeID&#xA;WHEN MATCHED AND &#xA;(isnull(T.CorrespType,'') &lt;&gt; isnull(S.CorrespType,'') OR&#xA;isnull(T.CorrespTypeName,'') &lt;&gt; isnull(S.CorrespTypeName,'') &#xA;)&#xA;   THEN UPDATE SET T.CorrespType = S.CorrespType ,&#xA;   T.CorrespTypeName = S.CorrespTypeName&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (CorrespTypeID,CorrespType,CorrespTypeName)&#xA;   VALUES (S.CorrespTypeID,S.CorrespType,S.CorrespTypeName);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PROCORE DIM\D_CostCalc"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{C400DEF3-F8FD-4D19-B69A-7BA6B9B8F51B}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_CostCalc"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="7">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_CostCalc AS T&#xA;USING (  select distinct isnull([uom],'-') CostCalcUom, isnull([estimated_cost_calculation_strategy],'-') CostCalcStrategy&#xA;from [STG].[PROCORE].[change_events]&#xA;) S &#xA;ON  T.CostCalcUom = S.CostCalcUom and T.CostCalcStrategy=S.CostCalcStrategy&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (CostCalcUom,CostCalcStrategy)&#xA;   VALUES (S.CostCalcUom,S.CostCalcStrategy);&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PROCORE DIM\D_CostCode"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{54A02282-48CC-44D5-959D-9A0497FB3F07}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_CostCode"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="8">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_CostCode AS T&#xA;USING (  select distinct &#xA;  [id_cost_code] CostCodeID&#xA;  ,  [name_cost_code] CostCodeName&#xA;FROM [STG].[PROCORE].[change_events]&#xA;where  [id_cost_code] is not null&#xA;) S &#xA;ON  T.CostCodeID = S.CostCodeID&#xA;WHEN MATCHED AND &#xA;(isnull(T.CostCodeName,'') &lt;&gt; isnull(S.CostCodeName,'') &#xA;)&#xA;  THEN UPDATE SET T.CostCodeName = S.CostCodeName&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (CostCodeID,CostCodeName)&#xA;   VALUES (S.CostCodeID,S.CostCodeName);&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PROCORE DIM\D_EventType"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{D511F83B-8619-44F3-9734-476E02218B5C}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_EventType"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="9">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_EventType AS T&#xA;USING (  SELECT DISTINCT isnull([event_type],'-') EventType,isnull([event_scope],'-')    EventScope&#xA; FROM [STG].[PROCORE].[change_events]&#xA;) S &#xA;ON  T.EventType = S.EventType and t.EventScope=s.EventScope&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (EventType,EventScope)&#xA;   VALUES (S.EventType,S.EventScope);&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PROCORE DIM\D_Insurance"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{72E476C9-2C48-4240-A757-FCFD71B9DFAE}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_Insurance"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="10">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_Insurance AS T&#xA;USING (&#xA;select *&#xA;from (  SELECT distinct [id] InsID&#xA;,[policy_number] InsPolicyNumber&#xA;      ,[description] InsDescription&#xA;      ,[title] InsTitle&#xA;      ,[contractor] InsContractor&#xA;&#x9;  ,[currency] InsCurrency&#xA;      ,[position_correspondance] InsPositionCorresp&#xA;&#x9;  ,[company_project_insurance] InsCompanyProjInsurance&#xA;      ,[commitment_number] InsCommitmentNumber&#xA;&#x9;  ,row_number() over (partition by [id] order by [contractor] desc) ord&#xA;&#x9;  &#xA;  FROM [STG].[PROCORE].[v_correspondance] c&#xA;  where title_generic_tool ='Insurance')x&#xA;  where x.ord&gt;0&#xA;) S &#xA;ON  T.InsID = S.InsID&#xA;WHEN MATCHED AND &#xA;(isnull(T.InsPolicyNumber,'') &lt;&gt; isnull(S.InsPolicyNumber,'') OR &#xA;isnull(T.InsPositionCorresp,'') &lt;&gt; isnull(S.InsPositionCorresp,'') OR &#xA;isnull(T.InsCommitmentNumber,'') &lt;&gt; isnull(S.InsCommitmentNumber,'') OR &#xA;isnull(T.InsTitle,'') &lt;&gt; isnull(S.InsTitle,'') OR &#xA;isnull(T.InsContractor,'') &lt;&gt; isnull(S.InsContractor,'') OR &#xA;isnull(T.InsDescription,'') &lt;&gt; isnull(S.InsDescription,'') OR &#xA;isnull(T.InsCurrency,'') &lt;&gt; isnull(S.InsCurrency,'') OR &#xA;isnull(T.InsCompanyProjInsurance,'') &lt;&gt; isnull(S.InsCompanyProjInsurance,'') &#xA;)&#xA;   THEN UPDATE SET T.InsPolicyNumber = S.InsPolicyNumber,&#xA;T.InsPositionCorresp = S.InsPositionCorresp,&#xA;T.InsCommitmentNumber = S.InsCommitmentNumber,&#xA;T.InsTitle = S.InsTitle,&#xA;T.InsContractor = S.InsContractor,&#xA;T.InsDescription = S.InsDescription,&#xA;T.InsCurrency = S.InsCurrency,&#xA;T.InsCompanyProjInsurance = S.InsCompanyProjInsurance&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (InsID&#x9;,&#xA;InsPolicyNumber&#x9;,&#xA;InsPositionCorresp&#x9;,&#xA;InsCommitmentNumber&#x9;,&#xA;InsTitle&#x9;,&#xA;InsContractor&#x9;,&#xA;InsDescription&#x9;,&#xA;InsCurrency&#x9;,&#xA;InsCompanyProjInsurance&#x9;)&#xA;   VALUES (S.InsID&#x9;,&#xA;S.InsPolicyNumber&#x9;,&#xA;S.InsPositionCorresp&#x9;,&#xA;S.InsCommitmentNumber&#x9;,&#xA;S.InsTitle&#x9;,&#xA;S.InsContractor&#x9;,&#xA;S.InsDescription&#x9;,&#xA;S.InsCurrency&#x9;,&#xA;S.InsCompanyProjInsurance&#x9;&#xA;);&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PROCORE DIM\D_InsuranceProvider"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{577F86F4-09BA-4880-91ED-ECA0C7DB3B95}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_InsuranceProvider"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="11">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_InsuranceProvider AS T&#xA;USING (  select distinct insurance_provider InsProviderName FROM [STG].[PROCORE].[v_correspondance] c where title_generic_tool ='Insurance' and isnull(insurance_provider,'') &lt;&gt; ''&#xA;) S &#xA;ON  T.InsProviderName = S.InsProviderName&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (InsProviderName)&#xA;   VALUES (S.InsProviderName);&#xA;&#xA;   " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PROCORE DIM\D_InsuranceType"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{B2D4AB36-C71E-482C-80E9-611AF128BF13}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_InsuranceType"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="12">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_InsuranceType AS T&#xA;USING (   select distinct insurance_type InsType FROM [STG].[PROCORE].[v_correspondance] c where title_generic_tool ='Insurance' and isnull([insurance_type],'') &lt;&gt; ''&#xA;) S &#xA;ON  T.InsType = S.InsType&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (InsType)&#xA;   VALUES (S.InsType);&#xA;   &#xA;&#xA;    " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PROCORE DIM\D_PayIssued"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{58756373-90E7-40E4-A09B-46A5850084A3}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_PayIssued"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="13">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="&#xA;MERGE DWH.DIM.D_PayIssued AS T&#xA;USING (  select distinct [id]  PayIssuedID&#xA;      ,[check_number] CheckNumber&#xA;&#x9;  ,[invoice_number] InvoiceNumber&#xA;&#x9;  ,[payment_number] PaymentNumber&#xA;&#x9;  ,[notes] Notes&#xA;&#x9;  ,[payment_method] PaymentMethod&#xA;&#xA;  FROM [STG].[PROCORE].[ContractPayment]&#xA;  &#xA;) S &#xA;ON  T.PayIssuedID = S.PayIssuedID&#xA;WHEN MATCHED AND &#xA;(&#xA;isnull(t.PayIssuedID,'') &lt;&gt; isnull(s.PayIssuedID,'') OR &#xA;isnull(t.CheckNumber,'') &lt;&gt; isnull(s.CheckNumber,'') OR &#xA;isnull(t.InvoiceNumber,'') &lt;&gt; isnull(s.InvoiceNumber,'') OR &#xA;isnull(t.PaymentNumber,'') &lt;&gt; isnull(s.PaymentNumber,'') OR &#xA;isnull(t.Notes,'') &lt;&gt; isnull(s.Notes,'') OR &#xA;isnull(t.PaymentMethod,'') &lt;&gt; isnull(s.PaymentMethod,'')&#xA;)&#xA;   THEN UPDATE SET &#xA;&#x9;T.CheckNumber = S.CheckNumber ,&#xA;T.InvoiceNumber = S.InvoiceNumber ,&#xA;T.PaymentNumber = S.PaymentNumber ,&#xA;T.Notes = S.Notes ,&#xA;T.PaymentMethod = S.PaymentMethod &#xA;&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (PayIssuedID&#x9;,CheckNumber&#x9;,InvoiceNumber&#x9;,PaymentNumber&#x9;,Notes&#x9;,PaymentMethod&#x9;&#x9;)&#xA;   VALUES (S.PayIssuedID,S.CheckNumber,S.InvoiceNumber,S.PaymentNumber,S.Notes,S.PaymentMethod&#x9;);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PROCORE DIM\D_PDN"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{E21FE005-080A-4DC7-A0F6-BF20C58BB5E0}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_PDN"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="14">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="&#xA;MERGE DWH.DIM.D_PDN AS T&#xA;USING (  SELECT distinct c.id PDNID,position_correspondance PDNPosCorresp,title PDNTitle,cost_impact PDNCostImpact&#xA;,status_cost PDNstatusCost,c.description PDNDescription,c.commitment_number PDNCommitmentNumber,c.contractor PDNContractor&#xA;,c.trade PDNTrade,c.name_trades PDNNameTrades,c.change_justification PDNChangeJustif,cast(currency as nvarchar(10)) Currency&#xA;FROM [STG].[PROCORE].[v_correspondance] c&#xA;where title_generic_tool='Potential Deviation Notice'&#xA;) S &#xA;ON  T.PDNID = S.PDNID&#xA;WHEN MATCHED AND &#xA;(isnull(T.PDNPosCorresp,'') &lt;&gt; isnull(S.PDNPosCorresp,'') OR &#xA;isnull(T.PDNTitle,'') &lt;&gt; isnull(S.PDNTitle,'') OR &#xA;isnull(T.PDNCostImpact,'') &lt;&gt; isnull(S.PDNCostImpact,'') OR &#xA;isnull(T.PDNstatusCost,'') &lt;&gt; isnull(S.PDNstatusCost,'') OR &#xA;isnull(T.PDNDescription,'') &lt;&gt; isnull(S.PDNDescription,'') OR &#xA;isnull(T.PDNCommitmentNumber,'') &lt;&gt; isnull(S.PDNCommitmentNumber,'') OR &#xA;isnull(T.PDNContractor,'') &lt;&gt; isnull(S.PDNContractor,'') OR &#xA;isnull(T.PDNTrade,'') &lt;&gt; isnull(S.PDNTrade,'') OR &#xA;isnull(T.PDNNameTrades,'') &lt;&gt; isnull(S.PDNNameTrades,'') OR &#xA;isnull(T.PDNChangeJustif,'') &lt;&gt; isnull(S.PDNChangeJustif,'') OR &#xA;isnull(T.Currency,'') &lt;&gt; isnull(S.Currency,'') &#xA;)&#xA;   THEN UPDATE SET &#xA;   T.PDNPosCorresp = S.PDNPosCorresp,&#xA;T.PDNTitle = S.PDNTitle,&#xA;T.PDNCostImpact = S.PDNCostImpact,&#xA;T.PDNstatusCost = S.PDNstatusCost,&#xA;T.PDNDescription = S.PDNDescription,&#xA;T.PDNCommitmentNumber = S.PDNCommitmentNumber,&#xA;T.PDNContractor = S.PDNContractor,&#xA;T.PDNTrade = S.PDNTrade,&#xA;T.PDNNameTrades = S.PDNNameTrades,&#xA;T.PDNChangeJustif = S.PDNChangeJustif,&#xA;T.Currency = S.Currency&#xA;&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (PDNID,PDNPosCorresp,PDNTitle,PDNCostImpact,PDNstatusCost,PDNDescription,PDNCommitmentNumber,PDNContractor,PDNTrade,PDNNameTrades,PDNChangeJustif,Currency)&#xA;   VALUES (S.PDNID,S.PDNPosCorresp,S.PDNTitle,S.PDNCostImpact,S.PDNstatusCost,S.PDNDescription,S.PDNCommitmentNumber,S.PDNContractor,S.PDNTrade,S.PDNNameTrades,S.PDNChangeJustif,S.Currency);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PROCORE DIM\D_ProcCorrespStatus"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{8C4FA9CA-8C36-4370-84ED-ABD3FD85EFCB}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_ProcCorrespStatus"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="15">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="&#xA;MERGE DWH.DIM.D_ProcCorrespStatus AS T&#xA;USING (  &#xA;SELECT  distinct [status] Status,status_type  FROM [STG].[PROCORE].v_correspondance c where isnull([status],'') &lt;&gt; ''&#xA;) S &#xA;ON  T.ProccorrespStatus = S.Status and T.ProccorrespStatusType=S.status_type&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (ProccorrespStatus,ProccorrespStatusType)&#xA;   VALUES (S.Status,S.status_type);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PROCORE DIM\D_ProcStatus"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{4f0d7778-aaf2-4c07-8c17-25b5da8aa363}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_ProcStatus"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="16">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_ProcStatus AS T&#xA;USING (  &#xA;select distinct status ProcStatus from [STG].[PROCORE].[commitments_subcontracts_work_order] c where isnull([status],'') &lt;&gt; ''&#xA;union&#xA;SELECT  distinct [status] InsStatus  FROM [STG].[PROCORE].[project_insurrance] c where isnull([status],'') &lt;&gt; ''&#xA;union&#xA;SELECT distinct [status] ReqStatus FROM [STG].[PROCORE].[requisitions] where isnull(status,'') &lt;&gt; ''&#xA;union&#xA;SELECT distinct [status]   VarStatus FROM [STG].[PROCORE].[variation] where isnull([status],'') &lt;&gt; ''&#xA;union&#xA;select distinct status ChangeStatus from stg.PROCORE.change_events  where isnull([status],'') &lt;&gt; ''&#xA;&#xA;) S &#xA;ON  T.ProcStatus = S.ProcStatus&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (ProcStatus)&#xA;   VALUES (S.ProcStatus);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PROCORE DIM\D_PROC_CONTRACT"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{ADA1BA94-E684-4DD8-93E0-BC14E8A97062}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_PROC_CONTRACT"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="17">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="&#xA;MERGE DWH.DIM.D_PROCCONTRACT AS T&#xA;USING (  SELECT c.[id] ContractID &#xA;&#x9;  ,vendor_company ContractorName&#xA;&#x9;  ,r.commitment_type CommitmentType&#xA;      ,[actual_completion_date] CompletionDate&#xA;&#x9;  ,[accounting_method] AccountingMethod&#xA;      ,[contract_date] ContractDate&#xA;      ,[contract_estimated_completion_date] ContractEstCompletionDate&#xA;      ,[contract_start_date]  ContractStartDate&#xA;      ,[description] ContractDescription&#xA;&#x9;  ,[inclusions]  ContractInclusion&#xA;&#x9;  ,[title] ContractTitle&#xA;&#x9;  ,[number] ContractNumber&#xA;&#x9;  ,custom_fields_custom_field_78686_value ContractCurrency&#xA;&#xA;  FROM [STG].[PROCORE].[commitments_subcontracts_work_order] c&#xA;  outer apply (select distinct commitment_type from stg.PROCORE.requisitions r where r.commitment_id = c.id)r&#xA;) S &#xA;ON  T.ContractID = S.ContractID&#xA;WHEN MATCHED AND &#xA;(isnull(T.ContractorName,'') &lt;&gt; isnull(S.ContractorName,'') OR&#xA;isnull(T.CommitmentType,'') &lt;&gt; isnull(S.CommitmentType,'') OR&#xA;isnull(T.ContractTitle,'') &lt;&gt; isnull(S.ContractTitle,'') OR&#xA;isnull(T.ContractNumber,'') &lt;&gt; isnull(S.ContractNumber,'') OR&#xA;isnull(T.CompletionDate,'9999-12-31') &lt;&gt; isnull(S.CompletionDate,'9999-12-31') OR&#xA;isnull(T.ContractDate,'9999-12-31') &lt;&gt; isnull(S.ContractDate,'9999-12-31') OR&#xA;isnull(T.ContractEstCompletionDate,'9999-12-31') &lt;&gt; isnull(S.ContractEstCompletionDate,'9999-12-31') OR&#xA;isnull(T.ContractStartDate,'9999-12-31') &lt;&gt; isnull(S.ContractStartDate,'9999-12-31') OR&#xA;isnull(T.AccountingMethod,'') &lt;&gt; isnull(S.AccountingMethod,'') OR&#xA;isnull(T.ContractDescription,'') &lt;&gt; isnull(S.ContractDescription,'') OR&#xA;isnull(T.ContractCurrency,'') &lt;&gt; isnull(S.ContractCurrency,'') OR&#xA;isnull(T.ContractInclusion,'') &lt;&gt; isnull(S.ContractInclusion,'') &#xA;)&#xA;THEN UPDATE SET T.ContractorName = S.ContractorName ,&#xA;T.CommitmentType = S.CommitmentType ,&#xA;T.CompletionDate = S.CompletionDate ,&#xA;T.ContractDate = S.ContractDate ,&#xA;T.ContractEstCompletionDate = S.ContractEstCompletionDate ,&#xA;T.ContractStartDate = S.ContractStartDate ,&#xA;T.AccountingMethod = S.AccountingMethod ,&#xA;T.ContractDescription = S.ContractDescription ,&#xA;T.ContractInclusion = S.ContractInclusion ,&#xA;T.ContractNumber=S.ContractNumber,&#xA;T.ContractTitle=S.ContractTitle,&#xA;T.ContractCurrency=s.ContractCurrency&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (ContractCurrency,ContractTitle,ContractNumber,ContractID,ContractorName,CommitmentType,CompletionDate,ContractDate,ContractEstCompletionDate,ContractStartDate,AccountingMethod,ContractDescription,ContractInclusion)&#xA;   VALUES (S.ContractCurrency,S.ContractTitle,S.ContractNumber,S.ContractID,S.ContractorName,S.CommitmentType,S.CompletionDate,S.ContractDate,S.ContractEstCompletionDate,S.ContractStartDate,S.AccountingMethod,S.ContractDescription,S.ContractInclusion);&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PROCORE DIM\D_PROC_USER"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{D5E6728A-0037-4085-A13B-9F63D640249A}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_PROC_USER"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_PROCUSER AS T&#xA;USING (  select distinct [id_creator] UserID&#xA;      ,[login_creator] UserLogin&#xA;      ,[name_creator] UserName&#xA;      ,[company_name_creator] UserCompanyName&#xA;,N'-' as UserType&#xA;&#x9;  from  stg.PROCORE.requisitions&#xA;&#x9;  where isnull(id_creator,'') &lt;&gt; ''&#xA;union&#xA;SELECT distinct &#xA;&#x9;   [id_received_from]&#xA;&#x9;   ,[login_receiver]&#xA;&#x9;   ,[name_receiver]&#xA;&#x9;   ,name_company&#xA;,N'-'&#xA;  FROM [STG].[PROCORE].[correspondance] c&#xA;  where isnull([id_received_from],'') &lt;&gt; ''&#xA;&#xA;  union&#xA;SELECT distinct &#xA;&#x9;   id_creator&#xA;&#x9;   ,[login_creator]&#xA;&#x9;   ,[name_creator]&#xA;&#x9;   ,company_creator&#xA;,N'-'&#xA;  FROM [STG].[PROCORE].[correspondance] c&#xA;  where isnull(id_creator,'') &lt;&gt; ''&#xA;union&#xA;select distinct id_assignee&#xA;,login_assignees&#xA;,name_assignees&#xA;,company_name_assignees&#xA;,N'-'&#xA;  FROM [STG].[PROCORE].[correspondance] c&#xA;  where isnull(id_assignee,'') &lt;&gt; ''&#xA;union&#xA;select distinct id_distribution&#xA;,login_distribution&#xA;,name_distribution&#xA;,company_name_distribution&#xA;,N'-'&#xA;  FROM [STG].[PROCORE].[correspondance] c&#xA;  where isnull(id_distribution,'') &lt;&gt; ''&#xA;&#xA;) S &#xA;ON  T.UserID = S.UserID and T.UserType = S.UserType &#xA;WHEN MATCHED AND &#xA;(isnull(T.UserLogin,'') &lt;&gt; isnull(S.UserLogin,'') OR&#xA;isnull(T.UserName,'') &lt;&gt; isnull(S.UserName,'') OR&#xA;isnull(T.UserCompanyName,'') &lt;&gt; isnull(S.UserCompanyName,'') &#xA;)&#xA;   THEN UPDATE SET &#xA;   T.UserName = S.UserName ,&#xA;   T.UserCompanyName = S.UserCompanyName&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (UserLogin,UserName,UserCompanyName,UserID,UserType)&#xA;   VALUES (S.UserLogin,S.UserName,S.UserCompanyName,S.UserID,S.UserType);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PROCORE DIM\D_ProjectRole"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DTSID="{20E3612F-076F-4A33-854B-EEB42DA2DC44}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_ProjectRole"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="18">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource=" MERGE DWH.DIM.D_ProjectRole AS T&#xA;USING (  select distinct role ProjectRole from [STG].[PROCORE].[ProjectRoles] r where role is not null&#xA;) S &#xA;ON  T.ProjectRole = S.ProjectRole&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (ProjectRole)&#xA;   VALUES (S.ProjectRole);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PROCORE DIM\D_SubContracting"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{8F655959-32BA-4561-B950-6A7C8290AC7D}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_SubContracting"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="19">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{7EFC0C6C-C380-4C43-8E7A-9FACF2484208}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_SubContracting AS T&#xA;USING (  &#xA;select distinct id SubContractingID,&#xA;position_correspondance SubContractingPositionCorresp,&#xA;title SubContractingTitle,&#xA;contractor SubContractingContractor,&#xA;&#xA;[subcontractor_name] SubContractingName&#xA;      ,[subcontractor_address] SubContractingAddress&#xA;      ,[subcontractor_email_address] SubContractingEmailAddress&#xA;      ,[subcontractor_city] SubContractingCity&#xA;      ,[subcontractor_country] SubContractingCountry&#xA;      ,[subcontractor_phone_number] SubContractingPhoneNumber&#xA;      ,[subcontractor_contact_name] SubContractingContactName&#xA;      ,[subcontractor_job_title] SubContractingJobTitle&#xA;      ,[subcontractor_scope_of_work] SubContractingScopeOfWork&#xA;      ,[subcontractor_nb] SubContractingNB&#xA;&#x9;    FROM [STG].[PROCORE].[v_correspondance]&#xA;&#x9;&#x9;where title_generic_tool ='Subcontracting Request'&#xA;&#x9;&#x9;&#xA;) S &#xA;ON  T.SubContractingID = S.SubContractingID&#xA;WHEN MATCHED AND &#xA;(&#xA;isnull(t.[SubContractingPositionCorresp],'') &lt;&gt; isnull(s.[SubContractingPositionCorresp],'') OR &#xA;isnull(t.[SubContractingTitle],'') &lt;&gt; isnull(s.[SubContractingTitle],'') OR &#xA;isnull(t.[SubContractingContractor],'') &lt;&gt; isnull(s.[SubContractingContractor],'') OR &#xA;isnull(t.[SubContractingName],'') &lt;&gt; isnull(s.[SubContractingName],'') OR &#xA;isnull(t.[SubContractingAddress],'') &lt;&gt; isnull(s.[SubContractingAddress],'') OR &#xA;isnull(t.[SubContractingEmailAddress],'') &lt;&gt; isnull(s.[SubContractingEmailAddress],'') OR &#xA;isnull(t.[SubContractingCity],'') &lt;&gt; isnull(s.[SubContractingCity],'') OR &#xA;isnull(t.[SubContractingCountry],'') &lt;&gt; isnull(s.[SubContractingCountry],'') OR &#xA;isnull(t.[SubContractingPhoneNumber],'') &lt;&gt; isnull(s.[SubContractingPhoneNumber],'') OR &#xA;isnull(t.[SubContractingContactName],'') &lt;&gt; isnull(s.[SubContractingContactName],'') OR &#xA;isnull(t.[SubContractingJobTitle],'') &lt;&gt; isnull(s.[SubContractingJobTitle],'') OR &#xA;isnull(t.[SubContractingScopeOfWork],'') &lt;&gt; isnull(s.[SubContractingScopeOfWork],'') OR &#xA;isnull(t.[SubContractingNB],'') &lt;&gt; isnull(s.[SubContractingNB],'')  &#xA;)&#xA;   THEN UPDATE SET T.[SubContractingPositionCorresp] = S.[SubContractingPositionCorresp] ,&#xA;T.[SubContractingTitle] = S.[SubContractingTitle] ,&#xA;T.[SubContractingContractor] = S.[SubContractingContractor] ,&#xA;T.[SubContractingName] = S.[SubContractingName] ,&#xA;T.[SubContractingAddress] = S.[SubContractingAddress] ,&#xA;T.[SubContractingEmailAddress] = S.[SubContractingEmailAddress] ,&#xA;T.[SubContractingCity] = S.[SubContractingCity] ,&#xA;T.[SubContractingCountry] = S.[SubContractingCountry] ,&#xA;T.[SubContractingPhoneNumber] = S.[SubContractingPhoneNumber] ,&#xA;T.[SubContractingContactName] = S.[SubContractingContactName] ,&#xA;T.[SubContractingJobTitle] = S.[SubContractingJobTitle] ,&#xA;T.[SubContractingScopeOfWork] = S.[SubContractingScopeOfWork] ,&#xA;T.[SubContractingNB] = S.[SubContractingNB] &#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT ([SubContractingID]&#x9;,&#xA;[SubContractingPositionCorresp]&#x9;,&#xA;[SubContractingTitle]&#x9;,&#xA;[SubContractingContractor]&#x9;,&#xA;[SubContractingName]&#x9;,&#xA;[SubContractingAddress]&#x9;,&#xA;[SubContractingEmailAddress]&#x9;,&#xA;[SubContractingCity]&#x9;,&#xA;[SubContractingCountry]&#x9;,&#xA;[SubContractingPhoneNumber]&#x9;,&#xA;[SubContractingContactName]&#x9;,&#xA;[SubContractingJobTitle]&#x9;,&#xA;[SubContractingScopeOfWork]&#x9;,&#xA;[SubContractingNB])&#xA;   VALUES (S.[SubContractingID],&#xA;S.[SubContractingPositionCorresp],&#xA;S.[SubContractingTitle],&#xA;S.[SubContractingContractor],&#xA;S.[SubContractingName],&#xA;S.[SubContractingAddress],&#xA;S.[SubContractingEmailAddress],&#xA;S.[SubContractingCity],&#xA;S.[SubContractingCountry],&#xA;S.[SubContractingPhoneNumber],&#xA;S.[SubContractingContactName],&#xA;S.[SubContractingJobTitle],&#xA;S.[SubContractingScopeOfWork],&#xA;S.[SubContractingNB]);&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PROCORE DIM\D_Vendor"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{D0B98C56-312B-480A-B148-8CAB46D67D93}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_Vendor"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="20">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_VENDOR AS T&#xA;USING (  select distinct  [id] VendorID&#xA;      ,[abbreviated_name] VendorAbrvName&#xA;      ,[company] VendorName&#xA;      ,[country_code] VendorCountry&#xA;      ,[city] VendorCity&#xA;      ,[address] VendorAddress&#xA;  FROM [STG].[PROCORE].[company_vendor]&#xA;) S &#xA;ON  T.VendorID = S.VendorID&#xA;WHEN MATCHED AND &#xA;(&#xA;isnull(T.VendorName,'') &lt;&gt; isnull(S.VendorName,'') OR &#xA;isnull(T.VendorAbrvName,'') &lt;&gt; isnull(S.VendorAbrvName,'') OR &#xA;isnull(T.VendorCountry,'') &lt;&gt; isnull(S.VendorCountry,'') OR &#xA;isnull(T.VendorCity,'') &lt;&gt; isnull(S.VendorCity,'') OR &#xA;isnull(T.VendorAddress,'') &lt;&gt; isnull(S.VendorAddress,'')  &#xA;)&#xA;   THEN UPDATE SET T.VendorName = S.VendorName,&#xA;   T.VendorAbrvName=S.VendorAbrvName,&#xA;   T.VendorCountry=S.VendorCountry,&#xA;   T.VendorCity=S.VendorCity,&#xA;   T.VendorAddress=S.VendorAddress&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (VendorID,VendorName,VendorAbrvName,VendorCountry,VendorCity,VendorAddress)&#xA;   VALUES (S.VendorID,S.VendorName,S.VendorAbrvName,S.VendorCountry,S.VendorCity,S.VendorAddress);&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PROCORE DIM\Update ins type unified"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{23F02147-AD77-4D16-9656-E4A19BB3E551}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update ins type unified"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="12">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="update DWH.DIM.D_InsuranceType&#xA;set InsTypeUnified = case &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when InsType=N'AT' then N'Accident de travail ( AT)'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when InsType=N'RC' then N'Other'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when InsType=N'TRC' then N'Tous Risques Chantier (TRC)'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when InsType=N'Accident de travail' then N'Accident de travail ( AT)'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when InsType=N'Accidents  de travail' then N'Accident de travail ( AT)'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when InsType=N'Flotte Automobile' then N'Other'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when InsType=N'Multirisques industriels' then N'Other'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when InsType=N'Responsabilité civile exploitataion' then N'Other'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when InsType=N'Responsabilité Civile Exploitation' then N'Other'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when InsType=N'Responsabilité civile professionnelle' then N'Responsabilité civile Professionnelle (RCP)'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when InsType=N'Tous risques chantier' then N'Tous Risques Chantier (TRC)'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when InsType=N'Tous risques chantier TRC' then N'Tous Risques Chantier (TRC)'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when InsType=N'TRANSORT tous risques' then N'Tous Risque Transport (TRT)'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else InsType&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end "
              SQLTask:TypeConversionMode="None" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\PROCORE DIM.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{8C4D1A61-04CD-4FBD-91DB-1E32F884362C}"
          DTS:From="Package\PROCORE DIM\D_InsuranceType"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\PROCORE DIM\Update ins type unified" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\PROCORE DIM.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{2143900E-F5A9-447B-9114-6529DB979785}"
          DTS:From="Package\PROCORE DIM\D_PROC_USER"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\PROCORE DIM\Data Flow Task" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\QA DIM"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{1f60e56d-08c8-4a97-bc0d-e897b84d2174}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="QA DIM">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\QA DIM\D_Activity"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{96ed1397-eb1c-4114-8ed9-74f7264c2d4c}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_Activity"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_Activity AS T&#xA;USING (SELECT distinct activity_id,activity_result,activity_result_desc,activity_status,activity_category,activity_subcategory,Activity_Comment&#xA;,activity_discipline,activity_progress,report_finding_status,activity_pre_draft,activity_to_delete,activity_type,&#xA;activity_creation_date activity_creation_date,activity_update_date,activity_planned_date,activity_conducted_date&#xA;,activity_completed_date,activity_rescheduled_date,activity_canceled_date,activity_discipline_code,Activity_Any_Raised_Capa,activity_source_id,&#xA;isnull(activity_planned_date,activity_conducted_date) activity_planned_conducted&#xA;FROM STG.ds.QA_ACTIVITY_TRANS ) S &#xA;ON  T.activityid = S.activity_id and T.EndDate is null&#xA;WHEN MATCHED AND &#xA;(&#xA;isnull(T.activityResult,'') &lt;&gt; isnull(S.activity_result,'') OR&#xA;isnull(T.activityResultDesc,'') &lt;&gt; isnull(S.activity_result_desc,'') OR&#xA;isnull(T.activityStatus,'') &lt;&gt; isnull(S.activity_status,'') OR&#xA;isnull(T.ActivityComment,'') &lt;&gt; isnull(S.Activity_Comment,'') OR&#xA;isnull(T.activityCategory,'') &lt;&gt; isnull(S.activity_category,'') OR&#xA;isnull(T.activitySubcategory,'') &lt;&gt; isnull(S.activity_subcategory,'') OR&#xA;isnull(T.activityDiscipline,'') &lt;&gt; isnull(S.activity_discipline,'') OR&#xA;isnull(T.activityProgress,'') &lt;&gt; isnull(S.activity_progress,'') OR&#xA;isnull(T.reportFindingStatus,'') &lt;&gt; isnull(S.report_finding_status,'') OR&#xA;isnull(T.activityPreDraft,'') &lt;&gt; isnull(S.activity_pre_draft,'') OR&#xA;isnull(T.activityToDelete,'') &lt;&gt; isnull(S.activity_to_delete,'') OR&#xA;isnull(T.activitycreationdate,'') &lt;&gt; isnull(S.activity_creation_date,'') OR&#xA;isnull(T.activityupdatedate,'') &lt;&gt; isnull(S.activity_update_date,'') OR&#xA;isnull(T.activityplanneddate,'') &lt;&gt; isnull(S.activity_planned_date,'') OR&#xA;isnull(T.activityconducteddate,'') &lt;&gt; isnull(S.activity_conducted_date,'') OR&#xA;isnull(T.activitycompleteddate,'') &lt;&gt; isnull(S.activity_completed_date,'') OR&#xA;isnull(T.activityrescheduleddate,'') &lt;&gt; isnull(S.activity_rescheduled_date,'') OR &#xA;isnull(T.activityDisciplineCode,'') &lt;&gt; isnull(S.activity_discipline_code,'') OR &#xA;isnull(T.activitycanceleddate,'') &lt;&gt; isnull(S.activity_canceled_date,'') OR&#xA;isnull(T.ActivityAnyRaisedCapa,'') &lt;&gt; isnull(S.Activity_Any_Raised_Capa,'')OR&#xA;isnull(T.ActivityType,'') &lt;&gt; isnull(S.Activity_Type,'')OR&#xA;isnull(T.ActivityPlannedConductedDate,'') &lt;&gt; isnull(S.activity_planned_conducted,'')OR&#xA;isnull(T.activitysourceid,'') &lt;&gt; isnull(S.activity_source_id,'')&#xA;)&#xA;&#xA;   THEN UPDATE SET  T.activityResult = S.activity_result, &#xA;   T.ActivityPlannedConductedDate=S.activity_planned_conducted,&#xA;     T.activityResultDesc = S.activity_result_desc, &#xA;     T.activityStatus = S.activity_status, &#xA;     T.activityCategory = S.activity_category, &#xA;     T.activitySubcategory = S.activity_subcategory, &#xA;     T.activityDiscipline = S.activity_discipline, &#xA;     T.activityProgress = S.activity_progress, &#xA;     T.reportFindingStatus = S.report_finding_status, &#xA;     T.activityPreDraft = S.activity_pre_draft, &#xA;     T.activityToDelete = S.activity_to_delete,&#xA;     T.activitycreationdate = S.activity_creation_date,&#xA;     T.activityupdatedate = S.activity_update_date,&#xA;     T.activityplanneddate = S.activity_planned_date,&#xA;     T.ActivityComment=S.Activity_Comment,&#xA;     T.activityconducteddate = S.activity_conducted_date,&#xA;     T.activitycompleteddate = S.activity_completed_date,&#xA;     T.activityrescheduleddate = S.activity_rescheduled_date,&#xA;     T.activitycanceleddate = S.activity_canceled_date,&#xA;T.activityDisciplineCode=S.activity_discipline_code,&#xA;T.ActivityAnyRaisedCapa=S.Activity_Any_Raised_Capa,&#xA;T.activitysourceid = S.activity_source_id,&#xA;T.ActivityType = S.Activity_Type&#xA;&#xA;&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT ( ActivityID&#xA;   ,ActivityPlannedConductedDate&#xA;    ,activityResult&#xA;    ,activityResultDesc&#xA;    ,activityStatus&#xA;    ,activityCategory&#xA;    ,activitySubcategory&#xA;    ,activityDiscipline&#xA;    ,activityProgress&#xA;    ,reportFindingStatus&#xA;    ,activityPreDraft&#xA;    ,activityToDelete&#xA;    ,activitycreationdate&#xA;    ,activityupdatedate&#xA;    ,activityplanneddate&#xA;    ,activityconducteddate&#xA;    ,activitycompleteddate&#xA;    ,activityrescheduleddate&#xA;    ,activitycanceleddate&#xA;    ,StartDate&#xA;,activityDisciplineCode&#xA;,ActivityComment&#xA;,ActivityAnyRaisedCapa&#xA;,activitysourceid&#xA;,ActivityType&#xA;)&#xA;   VALUES ( S.activity_id, &#xA;   S.activity_planned_conducted,&#xA;   S.activity_result, &#xA;   S.activity_result_desc, &#xA;   S.activity_status, &#xA;   S.activity_category, &#xA;   S.activity_subcategory, &#xA;   S.activity_discipline, &#xA;   S.activity_progress, &#xA;   S.report_finding_status, &#xA;   S.activity_pre_draft, &#xA;   S.activity_to_delete,&#xA;   s.activity_creation_date,&#xA;   s.activity_update_date,&#xA;   s.activity_planned_date,&#xA;   s.activity_conducted_date,&#xA;   s.activity_completed_date,&#xA;   S.activity_rescheduled_date,&#xA;   S.activity_canceled_date,&#xA;   cast(cast(getdate() as date) as datetime)&#xA;,S.activity_discipline_code&#xA;,Activity_Comment&#xA;,S.Activity_Any_Raised_Capa&#xA;,S.activity_source_id&#xA;,S.Activity_Type&#xA;  );&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\QA DIM\D_ActivityStatus"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{af408409-04db-470f-80ce-a7114e3f440c}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_ActivityStatus"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_ActivityStatus AS T&#xA;USING (select distinct activity_status,activity_status_code&#xA;from STG.ds.QA_ACTIVITY_TRANS&#xA;where activity_status_code is not null) S &#xA;ON  T.ActivityStatusCode = S.activity_status_code&#xA;WHEN MATCHED AND isnull(T.ActivityStatusLabel,'') &lt;&gt; isnull(S.activity_status,'') &#xA;   THEN UPDATE SET T.ActivityStatusLabel = S.activity_status&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (ActivityStatusCode,ActivityStatusLabel)&#xA;   VALUES (S.activity_status_code,S.activity_status);&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\QA DIM\D_CacheAdUsers"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{947c054f-e4df-4aef-84e4-9d40e89ef142}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_CacheAdUsers"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_CacheAdUsers AS T&#xA;USING (select cache_ad_user_id,&#xA;user_last_name,&#xA;user_first_name,&#xA;case when user_last_name is not null or user_first_name is not null then isnull(user_last_name,'') +' ' +isnull(user_first_name,'')&#xA;else SUBSTRING(user_email, 0, charindex('@', user_email, 0)) end user_full_name,&#xA;user_email,&#xA;user_deleted,&#xA;SourceSystem,&#xA;user_phone&#xA;from STG.ds.v_qa_user&#xA;&#xA;) S &#xA;ON  T.CacheAdUserID = S.cache_ad_user_id  and T.SourceSystem=N'QA'&#xA;WHEN MATCHED AND &#xA;(isnull(T.LastName,'') &lt;&gt; isnull(S.user_last_name,'') OR&#xA;isnull(T.FirstName,'') &lt;&gt; isnull(S.user_first_name,'') OR&#xA;isnull(T.Email,'') &lt;&gt; isnull(S.user_email,'')  OR&#xA;isnull(T.isdeleted,'') &lt;&gt; isnull(S.user_deleted,'')  OR&#xA;isnull(T.FullName,'') &lt;&gt; isnull(S.user_full_name,'') OR&#xA;isnull(T.SourceSystem,'') &lt;&gt; isnull(S.SourceSystem,'') OR&#xA;isnull(T.MobilePhone,'') &lt;&gt; isnull(S.user_phone,'') &#xA;)&#xA;   THEN UPDATE SET T.LastName = S.user_last_name ,T.FirstName = S.user_first_name ,T.Email = S.user_email ,T.FullName = S.user_full_name &#xA;   ,T.isdeleted = S.user_deleted,T.SourceSystem=S.SourceSystem,T.MobilePhone=S.user_phone&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (CacheAdUserID,LastName,FirstName,Email,FullName,isdeleted,SourceSystem,MobilePhone)&#xA;   VALUES (S.cache_ad_user_id,S.user_last_name,S.user_first_name,S.user_email,S.user_full_name ,S.user_deleted,SourceSystem,user_phone);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\QA DIM\D_Capa"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{f7da0b26-1590-46a1-b2e4-53c26d25acd2}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_Capa"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_Capa AS T&#xA;USING (SELECT distinct  capa_id&#xA;      ,capa_number &#xA;      ,capa_root_cause&#xA;      ,capa_root_cause_description&#xA;   ,capa_source_description&#xA;   ,capa_finding_description&#xA;   ,capa_action_description&#xA;      ,capa_status&#xA;   ,nature_of_finding_level1&#xA;   ,nature_of_finding_level2&#xA;   ,capa_comment&#xA;      ,capa_overdue_rating&#xA;      ,capa_risk_level&#xA;      ,cast(left(capa_issue_date,23) as datetime) capa_issue_date&#xA;   ,cast(left(capa_closed_date,23) as datetime)capa_closed_date &#xA;   ,cast(left(capa_creation_date,23) as datetime) capa_creation_date &#xA;   ,cast(left(capa_planned_implementation,23) as datetime) capa_planned_implementation&#xA;  FROM STG.ds.v_qa_CAPA) S &#xA;ON  T.capaid = S.capa_id &#xA;WHEN MATCHED AND (&#xA;   isnull(T.CapaNumber,'') &lt;&gt; isnull(S.capa_number,'') OR&#xA;   isnull(T.CapaRootCause,'') &lt;&gt; isnull(S.capa_root_cause,'') OR&#xA;   isnull(T.CapaRootCauseDesc,'') &lt;&gt; isnull(S.capa_root_cause_description,'') OR&#xA;   isnull(T.capasourcedescription,'') &lt;&gt; isnull(S.capa_source_description,'') OR&#xA;   isnull(T.capafindingdescription,'') &lt;&gt; isnull(S.capa_finding_description,'') OR&#xA;   isnull(T.capaactiondescription,'') &lt;&gt; isnull(S.capa_action_description,'') OR&#xA;   isnull(T.CapaStatus,'') &lt;&gt; isnull(S.capa_status,'') OR&#xA;   isnull(T.CapaOverdueRating,'') &lt;&gt; isnull(S.capa_overdue_rating,'') OR&#xA;   isnull(T.NatureOfFinding1,'') &lt;&gt; isnull(S.nature_of_finding_level1,'') OR&#xA;   isnull(T.NatureOfFinding2,'') &lt;&gt; isnull(S.nature_of_finding_level2,'') OR&#xA;   isnull(T.CapaRiskLevel,'') &lt;&gt; isnull(S.capa_risk_level,'') OR&#xA;   isnull(T.CapaComment,'') &lt;&gt; isnull(S.capa_comment,'') OR&#xA;   isnull(T.CapaCreationDate,'') &lt;&gt; isnull(S.capa_creation_date,'') OR&#xA;   isnull(T.CapaClosedDate,'') &lt;&gt; isnull(S.capa_closed_date,'') OR&#xA;   isnull(T.CapaIssueDate,'') &lt;&gt; isnull(S.capa_issue_date,'') OR&#xA;   isnull(T.CapaPlannedImplementation,'') &lt;&gt; isnull(S.capa_planned_implementation,'') &#xA;    )&#xA;&#xA;   THEN UPDATE SET  T.CapaNumber = S.capa_number ,&#xA;     T.CapaRootCause = S.capa_root_cause,&#xA;     T.CapaRootCauseDesc = S.capa_root_cause_description ,&#xA;     T.CapaStatus = S.capa_status ,&#xA;     T.capasourcedescription=S.capa_source_description,&#xA;     T.capafindingdescription=S.capa_finding_description,&#xA;     T.capaactiondescription=S.capa_action_description,&#xA;     T.CapaOverdueRating = S.capa_overdue_rating ,&#xA;     T.CapaRiskLevel = S.capa_risk_level ,&#xA;     T.capacomment = S.capa_comment ,&#xA;     T.NatureOfFinding1 = S.nature_of_finding_level1 ,&#xA;     T.NatureOfFinding2 = S.nature_of_finding_level2 ,&#xA;     T.CapaCreationDate = S.capa_creation_date ,&#xA;     T.CapaClosedDate = S.capa_closed_date ,&#xA;     T.CapaIssueDate = S.capa_issue_date,&#xA;     T.CapaPlannedImplementation = S.capa_planned_implementation&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (CapaID,capasourcedescription,capafindingdescription,capaactiondescription,CapaNumber,CapaRootCause,CapaRootCauseDesc,CapaStatus,CapaOverdueRating,CapaRiskLevel,NatureOfFinding1,NatureOfFinding2,CapaCreationDate,CapaClosedDate,CapaIssueDate,CapaPlannedImplementation,StartDate,capacomment)&#xA;   VALUES (S.capa_id,capa_source_description,capa_finding_description,capa_action_description,S.capa_number,S.capa_root_cause,S.capa_root_cause_description,S.capa_status,S.capa_overdue_rating,S.capa_risk_level,nature_of_finding_level1,nature_of_finding_level2,S.capa_creation_date,S.capa_closed_date,S.capa_issue_date,S.capa_planned_implementation,cast(cast(getdate() as date) as datetime),capa_comment);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\QA DIM\D_CapaStatus"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{2d481dbe-90b8-4325-a0bf-74d4ef58c9e1}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_CapaStatus"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="4">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_CapaStatus AS T&#xA;USING (select distinct capa_status,capa_status_code&#xA;from stg.ds.v_qa_CAPA&#xA;where capa_status_code is not null ) S &#xA;ON  T.CapaStatusCode = S.capa_status_code &#xA;WHEN MATCHED AND isnull(T.CapaStatus,'') &lt;&gt; isnull(S.capa_status,'')&#xA;   THEN UPDATE SET T.CapaStatus = S.capa_status &#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (CapaStatus,CapaStatusCode)&#xA;   VALUES (S.capa_status_code,S.capa_status);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\QA DIM\D_Enumeration"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{8206474a-7488-4fcd-86c3-b07b8399f6ed}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_Enumeration"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="5">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_Enumeration AS T&#xA;USING (SELECT 'QA-'+cast([id] as nvarchar(10)) EnumID&#xA;   ,[id]&#xA;      ,[type] EnumType&#xA;      ,[code] EnumCode&#xA;      ,[label] EnumLabel&#xA;  FROM [STG].[ds].[qa_enumeration] ) S &#xA;ON  T.EnumID = S.EnumID &#xA;WHEN MATCHED AND (isnull(T.Type,'') &lt;&gt; isnull(S.EnumType,'') or isnull(T.Code,'') &lt;&gt; isnull(S.EnumCode,'') or isnull(T.Label,'') &lt;&gt; isnull(S.EnumLabel,''))&#xA;   THEN UPDATE SET T.Type = S.EnumType, T.Code = S.EnumCode, T.Label = S.EnumLabel &#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (enumID,ID,Type,Code,Label)&#xA;   VALUES (S.enumID,S.ID,S.EnumType,S.EnumCode,S.EnumLabel);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\QA DIM\D_FindingReport"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{f09053cc-9bce-445c-9b23-557d892f85f2}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_FindingReport"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="6">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_FindingReport AS T&#xA;USING (select * &#xA;from (&#xA;SELECT  [report_id]&#xA;      ,[report]&#xA;   ,e.label as report_status&#xA;   ,[terms_of_reference]&#xA;      ,left([creation_date],23) [creation_date]&#xA;      ,left([update_date],23) [update_date]&#xA;&#x9;  ,ROW_NUMBER() over(partition by [report_id] order by update_date desc) ord&#xA;  FROM [STG].[ds].[qa_activity_finding_report] c&#xA;  inner join stg.ds.qa_enumeration e on e.id = c.report_status&#xA;  )x&#xA;  where x.ord=1) S &#xA;ON  T.FindingReportID = S.[report_id] &#xA;WHEN MATCHED AND (&#xA;   isnull(T.FindingReport,'') &lt;&gt; isnull(S.[report],'') OR&#xA;   isnull(T.FindingReportStatus,'') &lt;&gt; isnull(S.report_status,'') OR&#xA;   isnull(T.CreationDate,'9999-12-31') &lt;&gt; isnull(S.[creation_date],'9999-12-31') OR&#xA;   isnull(T.UpdateDate,'9999-12-31') &lt;&gt; isnull(S.[update_date],'9999-12-31') &#xA;    )&#xA;&#xA;   THEN UPDATE SET  T.FindingReport = S.[report] ,&#xA;     T.FindingReportStatus = S.report_status,&#xA;     T.CreationDate = S.[creation_date] ,&#xA;     T.UpdateDate = S.[update_date] &#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (FindingReportID,FindingReport,FindingReportStatus,CreationDate,UpdateDate)&#xA;   VALUES (S.[report_id],S.[report],S.report_status,S.[creation_date],S.[update_date]);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\QA DIM\D_OverdueRating"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{6030e29b-80b4-4976-9c9c-914b8e465e20}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_OverdueRating"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="7">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_OverdueRating AS T&#xA;USING (select distinct capa_overdue_rating,capa_overdue_rating_code&#xA;from stg.ds.v_qa_CAPA&#xA;where capa_overdue_rating_code is not null ) S &#xA;ON  T.CapaOverdueRatingCode = S.capa_overdue_rating_code &#xA;WHEN MATCHED AND isnull(T.CapaOverdueRating,'') &lt;&gt; isnull(S.capa_overdue_rating,'')&#xA;   THEN UPDATE SET T.CapaOverdueRating = S.capa_overdue_rating &#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (CapaOverdueRatingCode,CapaOverdueRating)&#xA;   VALUES (S.capa_overdue_rating_code,S.capa_overdue_rating);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\QA DIM\D_Planning"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{cc9ebede-e1cf-4fa1-ae1c-f8830ef2215b}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_Planning"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="8">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="&#xA;MERGE DWH.DIM.D_Planning AS T&#xA;USING (select distinct o.planning_id,&#xA;o.planning_status,&#xA;case when planning_activity_type = 'CRR / Pass Gate' then 'CRR (Construction Readiness Review)'&#xA;  when planning_activity_type='CES (Customer Expectation Survey)' then 'CSS (Customer Satisfaction Survey)'&#xA;  else isnull(planning_activity_type,'-')&#xA;  end planning_activity_type,&#xA;p.project_name,&#xA;cast(left(planning_creation_date,23) as datetime) planning_creation_date,&#xA;cast(left(planning_update_date,23) as datetime )  planning_update_date&#xA;from stg.ds.v_qa_planning o&#xA;left outer join stg.ds.qa_project_detail s on s.id=o.project_id&#xA;left outer join stg.ds.v_qa_project p on s.project_id = p.project_id  ) S &#xA;ON  T.planningid = S.planning_id and T.EndDate is null&#xA;WHEN MATCHED AND &#xA;(&#xA;isnull(T.planningstatus,'') &lt;&gt; isnull(S.planning_status,'') OR&#xA;isnull(T.planningactivitytype,'') &lt;&gt; isnull(S.planning_activity_type,'') OR&#xA;isnull(T.projectname,'') &lt;&gt; isnull(S.project_name,'') OR&#xA;isnull(T.planningcreationdate,'') &lt;&gt; isnull(S.planning_creation_date,'') OR&#xA;isnull(T.planningupdatedate,'') &lt;&gt; isnull(S.planning_update_date,'') &#xA;)&#xA;&#xA;   THEN UPDATE SET  T.planningstatus = S.planning_status, &#xA;     T.planningactivitytype = S.planning_activity_type, &#xA;     T.projectname = S.project_name,&#xA;     T.planningcreationdate = S.planning_creation_date,&#xA;     T.planningupdatedate = S.planning_update_date&#xA;&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT ( PlanningID,PlanningStatus,PlanningActivityType,ProjectName,planningcreationdate,planningupdatedate,StartDate)&#xA;   VALUES ( S.planning_id,&#xA;   S.planning_status,&#xA;   S.planning_activity_type,&#xA;   S.project_name,&#xA;   S.planning_creation_date,&#xA;   S.planning_update_date,&#xA;   cast(cast(getdate() as date) as datetime)&#xA;  );" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\QA DIM\D_PlanningActivityType"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{a199c056-12cd-4026-aecb-6f17ff5ddb7b}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_PlanningActivityType"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="9">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="&#xA;MERGE DWH.DIM.D_PlanningActivityType AS T&#xA;USING (select distinct planning_activity_type,planning_activity_type_code&#xA;from stg.ds.v_qa_PLANNING&#xA;where planning_activity_type_code is not null ) S &#xA;ON  T.PlanningActivityTypeCode = S.planning_activity_type_code &#xA;WHEN MATCHED AND isnull(T.PlanningActivityType,'') &lt;&gt; isnull(S.planning_activity_type,'')&#xA;   THEN UPDATE SET T.PlanningActivityType = S.planning_activity_type &#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (PlanningActivityTypeCode,PlanningActivityType)&#xA;   VALUES (S.planning_activity_type_code,S.planning_activity_type);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\QA DIM\D_PlanningStatus"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{f444461e-4552-426c-8c0d-eb54241ed217}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_PlanningStatus"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="10">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_PlanningStatus AS T&#xA;USING (select distinct planning_status_code,planning_status&#xA;from stg.ds.v_qa_PLANNING&#xA;where planning_status_code is not null ) S &#xA;ON  T.PlanningStatusCode = S.planning_status_code &#xA;WHEN MATCHED AND isnull(T.PlanningStatus,'') &lt;&gt; isnull(S.planning_status,'')&#xA;   THEN UPDATE SET T.PlanningStatus = S.planning_status &#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (PlanningStatus,PlanningStatusCode)&#xA;   VALUES (S.planning_status,S.planning_status_code);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\QA DIM\D_ReportStatus"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{420e4639-b07d-46d3-a78f-bc4dfc3b2484}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_ReportStatus"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="11">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_ReportStatus AS T&#xA;USING (select distinct report_finding_status,report_finding_code&#xA;from STG.ds.QA_ACTIVITY_TRANS&#xA;where report_finding_code is not null ) S &#xA;ON  T.ReportStatusCode = S.report_finding_code &#xA;WHEN MATCHED AND isnull(T.ReportStatusLabel,'') &lt;&gt; isnull(S.report_finding_status,'')&#xA;   THEN UPDATE SET T.ReportStatusLabel = S.report_finding_status &#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (ReportStatusCode,ReportStatusLabel)&#xA;   VALUES (S.report_finding_code,S.report_finding_status);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\QA DIM\D_Result"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{7ecac88b-bc1b-4ebd-a846-a18e8bef70c5}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_Result"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="12">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_Result AS T&#xA;USING (select distinct activity_result,activity_result_code&#xA;from STG.ds.QA_ACTIVITY_TRANS&#xA;where activity_result_code is not null) S &#xA;ON  T.ResultCode = S.activity_result_code&#xA;WHEN MATCHED AND isnull(T.ResultLabel,'') &lt;&gt; isnull(S.activity_result,'') &#xA;   THEN UPDATE SET T.ResultLabel = S.activity_result &#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (ResultCode,ResultLabel)&#xA;   VALUES (S.activity_result_code,S.activity_result);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\QA DIM\D_Risk"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5d8c03ff-5bf0-4ae0-add3-0110440caf36}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_Risk"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="13">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_Risk AS T&#xA;USING (select distinct capa_risk_level,capa_risk_level_code&#xA;from stg.ds.v_qa_CAPA&#xA;where capa_risk_level_code is not null ) S &#xA;ON  T.CapaRiskCode = S.capa_risk_level_code &#xA;WHEN MATCHED AND isnull(T.CapaRisk,'') &lt;&gt; isnull(S.capa_risk_level,'')&#xA;   THEN UPDATE SET T.CapaRisk = S.capa_risk_level &#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (CapaRiskCode,CapaRisk)&#xA;   VALUES (S.capa_risk_level_code,S.capa_risk_level);&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\QA DIM\D_RootCause"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{532ba823-94ab-4bb9-a852-c6d5c3121f00}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_RootCause"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="14">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_RootCause AS T&#xA;USING (select distinct capa_root_cause,capa_root_cause_code&#xA;from stg.ds.v_qa_CAPA&#xA;where capa_root_cause_code is not null ) S &#xA;ON  T.RootCauseCode = S.capa_root_cause_code &#xA;WHEN MATCHED AND isnull(T.RootCause,'') &lt;&gt; isnull(S.capa_root_cause,'')&#xA;   THEN UPDATE SET T.RootCause = S.capa_root_cause &#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (RootCause,RootCauseCode)&#xA;   VALUES (S.capa_root_cause,S.capa_root_cause_code);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SAP DIM"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{57bf5b4e-9906-4fff-9332-840b0b6494d2}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="SAP DIM">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\SAP DIM\D_CostCenter"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{b148cb90-f22e-4115-98be-20b6e4ed4f73}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_CostCenter"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_CostCenter AS T&#xA;USING (&#xA;SELECT distinct &#xA;cast([Cost Center] as int) AS CostCenter&#xA;,[Company Code] AS CompanyCode&#xA;,[Description] AS Description&#xA;,isnull([Cost Center Owner] ,'') AS CostCenterOwner&#xA;,[Hierarchy Area] AS HierarchyArea&#xA;,[Currency] AS Currency&#xA;,[Profit Center] AS ProfitCenterLabel&#xA;,[New P&amp;L] AS NewPLSub&#xA;,isnull(p.ProfitCenterID,-1) ProfitCenterID&#xA;,case when Category='Do not use' then null&#xA;&#x9;  when [New P&amp;L]='Intra' then 'Intra BU'&#xA;&#x9;  when Category='Operational G&amp;As' and [New P&amp;L]='Direct Bus' then 'Direct G&amp;As'&#xA;&#x9;  when Category='Operational G&amp;As' and [New P&amp;L]='Services Bus' then 'Services Direct G&amp;As'&#xA;&#x9;  else Category&#xA;end NewPL&#xA;--,case [New P&amp;L]&#xA;-- when N'Labor Direct G&amp;A' then 'Direct G&amp;As'&#xA;-- when N'Conventional' then 'Direct G&amp;As'&#xA;-- when N'General Services Overheads' then N'Services G&amp;As'&#xA;-- when N'Supply Chain Overheads' then N'Services G&amp;As'&#xA;-- when N'JESA Academy Overheads' then N'Services G&amp;As'&#xA;-- when N'R&amp;D Overheads' then N'Services G&amp;As'&#xA;-- when N'Assurance Overheads' then N'Services G&amp;As'&#xA;-- when N'Growth BA' then N'Services G&amp;As'&#xA;-- when N'JESA Institute' then N'Services G&amp;As'&#xA;-- when N'Project Control' then N'Services G&amp;As'&#xA;-- when N'E&amp;D' then N'Services G&amp;As'&#xA;-- when N'Growth Overheads' then N'Services G&amp;As'&#xA;-- when N'Field Services' then N'Services G&amp;As'&#xA;-- when N'project Delivery' then N'Services G&amp;As'&#xA;-- when N'R3 Overheads' then N'Services G&amp;As'&#xA;-- when N'Digital Transformation' then N'Services G&amp;As'&#xA;-- when N'Services Direct G&amp;As' then N'Services Direct G&amp;As'&#xA;-- when N'General Management BA' then N'Corporate G&amp;As'&#xA;-- when N'Legal BA' then N'Corporate G&amp;As'&#xA;-- when N'Audit &amp; Risk BA' then N'Corporate G&amp;As'&#xA;-- when N'Human Resources BA' then N'Corporate G&amp;As'&#xA;-- when N'Com &amp; PR BA' then N'Corporate G&amp;As'&#xA;-- when N'Finance Overheads BA' then N'Corporate G&amp;As'&#xA;-- when N'JFN' then N'Corporate G&amp;As'&#xA;-- when N'Information Technology BA' then N'Variances'&#xA;-- when N'Information Technology Overheads' then N'Variances'&#xA;-- when N'LDC Variances' then N'Variances'&#xA;-- when N'ODC Variances' then N'Variances'&#xA;-- when N'ADC Variances' then N'Variances'&#xA;-- when N'Other Variances' then N'Variances'&#xA;-- when N'Intra ADS' then N'Intra BU '&#xA;-- when N'Intra AMT' then N'Intra BU '&#xA;-- when N'Intra M&amp;I' then N'Intra BU '&#xA;-- when N'Intra B&amp;I' then N'Intra BU '&#xA;-- when N'Intra SUR' then N'Intra BU '&#xA;-- when N'Intra JET' then N'Intra BU '&#xA;-- when N'Other Cost' then N'Other Cost'&#xA;-- when N'Audit &amp; Risk Overheads' then N'Corporate G&amp;As'&#xA;-- when N'Com &amp; PR Overheads' then N'Corporate G&amp;As'&#xA;-- when N'Exchange Rate Differences' then N'A ne pas prendre en compte'&#xA;-- when N'Finance Overheads' then N'Corporate G&amp;As'&#xA;-- when N'General Management Overheads' then N'Corporate G&amp;As'&#xA;-- when N'Human Resources Overheads' then N'Corporate G&amp;As'&#xA;-- when N'Interests' then N'A ne pas prendre en compte'&#xA;-- when N'JESA Foundation' then N'Services G&amp;As'&#xA;-- when N'Legal Overheads' then N'Corporate G&amp;As'&#xA;-- when N'Non Operating Expenses' then N'A ne pas prendre en compte'&#xA;-- when N'Operational Taxes' then N'A ne pas prendre en compte'&#xA;-- when N'Other Expenses' then N'A ne pas prendre en compte'&#xA;-- when N'Others - Curr/G&amp;L' then N'A ne pas prendre en compte'&#xA;--end NewPL&#xA;FROM [STG].[SPS].[CostCenterMapping] c&#xA;left outer join DWH.DIM.D_ProfitCenter p on p.ProfitCenterCode = c.[Profit Center]&#xA;where c.[Cost Center] is not null &#xA;) S &#xA;ON  T.CostCenterCode = S.CostCenter &#xA;WHEN MATCHED AND &#xA;(isnull(T.CompanyCode,'') &lt;&gt; isnull(S.CompanyCode,'') OR &#xA;isnull(T.Description,'') &lt;&gt; isnull(S.Description,'') OR &#xA;isnull(T.CostCenterOwner,'') &lt;&gt; isnull(S.CostCenterOwner,'') OR &#xA;isnull(T.HierarchyArea,'') &lt;&gt; isnull(S.HierarchyArea,'') OR &#xA;isnull(T.Currency,'') &lt;&gt; isnull(S.Currency,'') OR &#xA;isnull(T.ProfitCenter,'') &lt;&gt; isnull(S.ProfitCenterLabel,'') OR &#xA;isnull(T.PLSubCategory,'') &lt;&gt; isnull(S.NewPLSub,'') OR &#xA;isnull(T.ProfitCenterID,'-1') &lt;&gt; isnull(S.ProfitCenterID,'-1') OR &#xA;isnull(T.PLCategory,'') &lt;&gt; isnull(S.NewPL,'') &#xA;)&#xA;   THEN UPDATE SET T.CompanyCode = S.CompanyCode , &#xA;T.Description = S.Description , &#xA;T.CostCenterOwner = S.CostCenterOwner , &#xA;T.HierarchyArea = S.HierarchyArea , &#xA;T.Currency = S.Currency , &#xA;T.ProfitCenter = S.ProfitCenterLabel , &#xA;T.PLSubCategory = S.NewPLSub , &#xA;T.ProfitCenterID = S.ProfitCenterID , &#xA;T.PLCategory = S.NewPL  &#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (CostCenterCode ,CompanyCode ,Description ,CostCenterOwner ,HierarchyArea ,&#xA;Currency ,ProfitCenter ,PLSubCategory ,ProfitCenterID ,PLCategory)&#xA;   VALUES (S.CostCenter,S.CompanyCode,S.Description,S.CostCenterOwner,S.HierarchyArea,S.Currency,&#xA;S.ProfitCenterLabel,S.NewPLSub,S.ProfitCenterID,S.NewPL);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SAP DIM\D_CostElement"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{0594c87c-c599-4d51-8624-be4799549197}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_CostElement"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_CostElement AS T&#xA;USING (SELECT [Cost Element] CostElementCode&#xA;      ,[Cost Element Name]  CostElementName&#xA;      ,left([Cost element descr#],1) CostElementDescription&#xA;      ,[Labor#non Labor] LaborNonLabor&#xA;      ,[CategorieI ] CategorieI&#xA;      ,[Categorie II] CategorieII&#xA;  FROM [STG].[SPS].[GAsPreliminaryMappingByCategory]&#xA;GROUP BY [Cost Element]&#xA;      ,[Cost Element Name]&#xA;      ,[Cost element descr#]&#xA;      ,[Labor#non Labor]&#xA;      ,[CategorieI ]&#xA;      ,[Categorie II]&#xA;) S &#xA;ON  T.CostElementCode = S.CostElementCode &#xA;WHEN MATCHED AND &#xA;(isnull(T.CostElementDescription,'') &lt;&gt; isnull(S.CostElementDescription,'') OR &#xA;isnull(T.LaborNonLabor,'') &lt;&gt; isnull(S.LaborNonLabor,'') OR &#xA;isnull(T.CategorieI,'') &lt;&gt; isnull(S.CategorieI,'') OR &#xA;isnull(T.CategorieII,'') &lt;&gt; isnull(S.CategorieII,'') OR &#xA;isnull(T.CostElementName,'') &lt;&gt; isnull(S.CostElementName,'')&#xA;)&#xA;   THEN UPDATE SET T.CostElementDescription = S.CostElementDescription ,&#xA;T.LaborNonLabor = S.LaborNonLabor ,&#xA;T.CategorieI = S.CategorieI ,&#xA;T.CategorieII = S.CategorieII ,&#xA;T.CostElementName = S.CostElementName  &#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (CostElementCode ,CostElementDescription ,LaborNonLabor ,CategorieI ,CategorieII ,CostElementName)&#xA;   VALUES (S.CostElementCode ,S.CostElementDescription ,S.LaborNonLabor ,S.CategorieI ,S.CategorieII ,S.CostElementName);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SAP DIM\D_Employee"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{24304f4d-96e5-4d77-b414-944e8f933a7e}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_Employee"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.[D_Employee] AS T&#xA;USING (select &#xA;P2.PERNR as EMP_SAP_ID,&#xA;NATIO as Nationality,&#xA;GESCH as Gender,&#xA;GBDAT as DateOfBirth,&#xA;NULL as ContractType,&#xA;CASE &#xA;--02 : contract zffzctivz date&#xA;--03 : senioriry date&#xA;WHEN DAR01 = '02' THEN DAT01&#xA;WHEN DAR02 = '02' THEN DAT02&#xA;WHEN DAR03 = '02' THEN DAT03&#xA;END as SeniorityDate&#xA;FROM [STG].SAP.PA0002 P2&#xA;--LEFT JOIN [STG].SAP.PA0016 P16 ON P2.PERNR = P16.PERNR AND P2.MANDT = P16.MANDT&#xA;LEFT JOIN [STG].SAP.PA0001 P1 ON P2.PERNR = P1.PERNR AND P2.MANDT = P1.MANDT and P1.ENDDA = 99991231&#xA;LEFT JOIN [STG].[SAP].[PA0041] P41 ON P2.PERNR = P41.PERNR AND P2.MANDT = P41.MANDT AND P41.ENDDA = 99991231&#xA;WHERE P2.MANDT = 100&#xA;AND P2.ENDDA=99991231&#xA;AND P1.PERSG NOT IN ('S','Y')&#xA;GROUP BY P2.PERNR,NATIO,GESCH,GBDAT,DAR01,DAR02,DAR03,DAT01,DAT02,DAT03 &#xA;) S &#xA;ON  T.EMP_SAP_ID = S.EMP_SAP_ID &#xA;WHEN MATCHED AND &#xA;(isnull(T.Nationality,'') &lt;&gt; isnull(S.Nationality,'') OR &#xA;isnull(T.Gender,'') &lt;&gt; isnull(S.Gender,'') OR &#xA;isnull(T.DateOfBirth,'') &lt;&gt; isnull(S.DateOfBirth,'') OR &#xA;isnull(T.ContractType,'') &lt;&gt; isnull(S.ContractType,'') OR &#xA;isnull(T.SeniorityDate,'') &lt;&gt; isnull(S.SeniorityDate,'') &#xA;)&#xA;   THEN UPDATE SET T.Nationality = S.Nationality ,&#xA;T.Gender = S.Gender ,&#xA;T.DateOfBirth = S.DateOfBirth ,&#xA;T.ContractType = S.ContractType ,&#xA;T.SeniorityDate = S.SeniorityDate   &#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (EMP_SAP_ID ,Nationality ,Gender ,DateOfBirth ,ContractType ,SeniorityDate)&#xA;   VALUES (S.EMP_SAP_ID ,S.Nationality ,S.Gender ,S.DateOfBirth ,S.ContractType ,S.SeniorityDate);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SAP DIM\D_GLAccount"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{4af40f1a-164f-4f5a-8a45-1e7f65661fdb}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_GLAccount"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.[D_GLAccount] AS T&#xA;USING (select [G/L Account] GLAccount,[G/L Account: Long Text]  GLAccountLongText&#xA;  FROM [STG].[SPS].[ExtractionGLPB] &#xA;  where [G/L Account]&lt;&gt; ''&#xA;  GROUP BY [G/L Account],[G/L Account: Long Text]&#xA;) S &#xA;ON  T.GLAccount = S.GLAccount &#xA;WHEN MATCHED AND &#xA;(isnull(T.GLAccountLongText,'') &lt;&gt; isnull(S.GLAccountLongText,'')&#xA;)&#xA;   THEN UPDATE SET T.GLAccountLongText = S.GLAccountLongText&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (GLAccount ,GLAccountLongText)&#xA;   VALUES (S.GLAccount ,S.GLAccountLongText);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SAP DIM\D_ProfiCenter"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{3d6f128e-99c7-4a75-a32c-d4bba8a71b24}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_ProfiCenter"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_ProfitCenter AS T&#xA;USING (   select PRCTR ProfitCenterCode,&#xA;  cast(datab as datetime) ValidFrom,&#xA;  cast(datbi as datetime) ValidTo,&#xA;  [Name] as ProfitCenterName,&#xA;  [long text] as ProfitCenterLongText&#xA;   from stg.sap.cepc c &#xA;   left outer join [STG].[SPS].[ProfitCenterMasterData]  s on s.[Profit Center] = c.PRCTR&#xA;) S &#xA;ON  T.ProfitCenterCode = S.ProfitCenterCode &#xA;WHEN MATCHED AND &#xA;(isnull(T.Name,'') &lt;&gt; isnull(S.ProfitCenterName,'') OR&#xA;isnull(T.ProfitCenterLongText,'') &lt;&gt; isnull(S.ProfitCenterLongText,'') &#xA;)&#xA;   THEN UPDATE SET T.Name = S.ProfitCenterName ,T.ProfitCenterLongText = S.ProfitCenterLongText &#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (ValidFrom,ValidTo,Name,ProfitCenterLongText,ProfitCenterCode)&#xA;   VALUES (S.ValidFrom,S.ValidTo,S.ProfitCenterName,S.ProfitCenterLongText,S.ProfitCenterCode);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SAP DIM\D_ProjectTasks"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{520dadfa-e4fd-4119-89c4-3a9a87ba6e46}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_ProjectTasks"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_ProjectTasks AS T&#xA;USING (select distinct substring(RNETWORK_TXT ,0,charindex('(',RNETWORK_TXT ,0))   TaskLabel,&#xA;RPROJ_TXT ProjectLabel,&#xA;replace(reverse(SUBSTRING(reverse(RPROJ_TXT),CHARINDEX(')',reverse(RPROJ_TXT),0)+1,&#xA;CHARINDEX('(',reverse(RPROJ_TXT),0)-CHARINDEX(')',reverse(RPROJ_TXT),0) )),'(','') ProjectCode &#xA;from STG.SAP.CATSDB&#xA;where  MANDT = 100 and RPROJ_TXT is not null) S &#xA;ON  T.ProjectCode = S.ProjectCode and isnull(T.TaskLabel,'') = isnull(T.TaskLabel,'') and  T.ProjectLabel = S.ProjectLabel&#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (ProjectCode,ProjectLabel,TaskLabel)&#xA;   VALUES (S.ProjectCode,S.ProjectLabel,S.TaskLabel)&#xA;;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SAP DIM\WBS"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{157bb259-dd08-40a9-a80f-3ea5fb7eceb4}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="WBS"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_WBS AS T&#xA;USING (  &#xA;SELECT ProfitCenterID,&#xA;-1 as SectorID&#xA;,-1 as LegalEntityID&#xA;,[PRCTR] [ProfitCenter]&#xA;,[POSID] as WBSElement&#xA;,[POST1] [Description]&#xA;,[OBJNR] ObjectNumber&#xA;,pro.PSPID CurrentInternalProjectNumber&#xA;,[WERKS]  CompanyCode&#xA;,PGSBR BusinessArea&#xA;,PKOKR ControllingArea&#xA;,[PWPOS] [Currency]&#xA;,PBUKR Plant&#xA;,[ZAD_SERTYP] [Service_Type]&#xA;,[ZAD_CT] [Contracttype]&#xA;,left([PRART],2) ProjectType&#xA;,cast([ERDAT] as datetime) CreationDate&#xA;,[ZAD_REG] [Region]&#xA;,[ZAD_GEO] [Geography]&#xA;,[ZAD_SECLOB] LobSector&#xA;,[ZAD_LAND] CountryID&#xA;,[ZAD_PRLO] [Location1]  &#xA;,null  ONCP     &#xA;FROM [STG].[SAP].[PRPS] p&#xA;outer apply (select distinct pr.PSPID from stg.sap.proj pr where pr.PSPNR=p.[PSPHI]) pro&#xA;left join dwh.dim.D_ProfitCenter pr on pr.ProfitCenterCode = p.PRCTR&#xA;) S &#xA;ON  T.WBSElement = S.WBSElement &#xA;WHEN MATCHED AND &#xA;(&#xA;isnull(T.Description,'') &lt;&gt; isnull(S.Description,'') OR &#xA;isnull(T.ObjectNumber,'') &lt;&gt; isnull(S.ObjectNumber,'') OR &#xA;isnull(T.CurrentInternalProjectNumber,'') &lt;&gt; isnull(S.CurrentInternalProjectNumber,'') OR &#xA;isnull(T.CompanyCode,'') &lt;&gt; isnull(S.CompanyCode,'') OR &#xA;isnull(T.BusinessArea,'') &lt;&gt; isnull(S.BusinessArea,'') OR &#xA;isnull(T.ControllingArea,'') &lt;&gt; isnull(S.ControllingArea,'') OR &#xA;isnull(T.Currency,'') &lt;&gt; isnull(S.Currency,'') OR &#xA;isnull(T.Plant,'') &lt;&gt; isnull(S.Plant,'') OR &#xA;isnull(T.ServiceType,'') &lt;&gt; isnull(S.Service_Type,'') OR &#xA;isnull(T.ContractType,'') &lt;&gt; isnull(S.ContractType,'') OR &#xA;isnull(T.ProjectType,'') &lt;&gt; isnull(S.ProjectType,'') OR &#xA;isnull(T.CreationDate,'') &lt;&gt; isnull(S.CreationDate,'') OR &#xA;isnull(T.Region,'') &lt;&gt; isnull(S.Region,'') OR &#xA;isnull(T.Geography,'') &lt;&gt; isnull(S.Geography,'') OR &#xA;isnull(T.LobSector,'') &lt;&gt; isnull(S.LobSector,'') OR &#xA;isnull(T.CountryID,'') &lt;&gt; isnull(S.CountryID,'') OR &#xA;isnull(T.Location1,'') &lt;&gt; isnull(S.Location1,'') OR &#xA;isnull(T.ONCP,'') &lt;&gt; isnull(S.ONCP,'') OR &#xA;isnull(T.ProfitCenterID,'') &lt;&gt; isnull(S.ProfitCenterID,'') OR&#xA;isnull(T.SectorID,'') &lt;&gt; isnull(S.SectorID,'') OR &#xA;isnull(T.LegalEntityID,'') &lt;&gt; isnull(S.LegalEntityID,'') &#xA;)&#xA;   THEN UPDATE SET T.SectorID = S.SectorID,&#xA;T.LegalEntityID = S.LegalEntityID,&#xA;T.Description = S.Description,&#xA;T.ObjectNumber = S.ObjectNumber,&#xA;T.CurrentInternalProjectNumber = S.CurrentInternalProjectNumber,&#xA;T.CompanyCode = S.CompanyCode,&#xA;T.BusinessArea = S.BusinessArea,&#xA;T.ControllingArea = S.ControllingArea,&#xA;T.Currency = S.Currency,&#xA;T.Plant = S.Plant,&#xA;T.ServiceType = S.Service_Type,&#xA;T.ContractType = S.ContractType,&#xA;T.ProjectType = S.ProjectType,&#xA;T.CreationDate = S.CreationDate,&#xA;T.Region = S.Region,&#xA;T.Geography = S.Geography,&#xA;T.LobSector = S.LobSector,&#xA;T.CountryID = S.CountryID,&#xA;T.Location1 = S.Location1,&#xA;T.ONCP = S.ONCP,&#xA;T.ProfitCenterID = S.ProfitCenterID &#xA;WHEN NOT MATCHED BY TARGET&#xA;   THEN INSERT (WBSElement ,&#xA;SectorID ,&#xA;LegalEntityID ,&#xA;Description ,&#xA;ObjectNumber ,&#xA;CurrentInternalProjectNumber ,&#xA;CompanyCode ,&#xA;BusinessArea ,&#xA;ControllingArea ,&#xA;Currency ,&#xA;Plant ,&#xA;ServiceType ,&#xA;ContractType ,&#xA;ProjectType ,&#xA;CreationDate ,&#xA;Region ,&#xA;Geography ,&#xA;LobSector ,&#xA;CountryID ,&#xA;Location1 ,&#xA;ONCP ,&#xA;ProfitCenterID &#xA;)&#xA;   VALUES (S.WBSElement,&#xA;-1,&#xA;-1,&#xA;S.Description,&#xA;S.ObjectNumber,&#xA;S.CurrentInternalProjectNumber,&#xA;S.CompanyCode,&#xA;S.BusinessArea,&#xA;S.ControllingArea,&#xA;S.Currency,&#xA;S.Plant,&#xA;S.Service_Type,&#xA;S.ContractType,&#xA;S.ProjectType,&#xA;S.CreationDate,&#xA;S.Region,&#xA;S.Geography,&#xA;S.LobSector,&#xA;S.CountryID,&#xA;S.Location1,&#xA;S.ONCP,&#xA;S.ProfitCenterID&#xA;);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SAP DIM.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{2ad24f50-a0d5-4ff0-8a85-8f47ad568b50}"
          DTS:From="Package\SAP DIM\D_ProfiCenter"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\SAP DIM\WBS" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SAP DIM.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{9a9dc387-e21b-4c9a-97b0-2d3e43e2983e}"
          DTS:From="Package\SAP DIM\D_GLAccount"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\SAP DIM\D_ProjectTasks" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SAP DIM.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{293ca02e-6e48-400f-98f3-9a0e09db1a76}"
          DTS:From="Package\SAP DIM\D_Employee"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\SAP DIM\D_CostElement" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SAP DIM.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{4f2642fe-d63a-4c0b-b45d-031d9bdc1ace}"
          DTS:From="Package\SAP DIM\WBS"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\SAP DIM\D_CostCenter" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SAP DIM.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{7619e1ec-fda5-4e6d-8d98-d01eae2b4f6a}"
          DTS:From="Package\SAP DIM\D_CostCenter"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\SAP DIM\D_Employee" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SAP DIM.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{0c8a6e71-a28a-46d7-ac76-63ff83b6a891}"
          DTS:From="Package\SAP DIM\D_CostElement"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\SAP DIM\D_GLAccount" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SHARED DIM"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{59446A08-AEC0-44E7-B013-991AD42D4A54}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="SHARED DIM">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\SHARED DIM\D_PROJECT Step 1"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{6D827756-F5DF-46DD-9907-34B37DA6915C}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_PROJECT Step 1"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{7EFC0C6C-C380-4C43-8E7A-9FACF2484208}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_Project AS T&#xA;USING (&#xA;SELECT &#xA;&#x9;[project_number]&#xA;&#x9;,[j_project_bu] project_bu&#xA;&#x9;,isnull(b.BuSectorSK,-1) BuSectorSK &#xA;&#x9;,isnull(pc.ProjectClassSK,-1) ProjectClassSK &#xA;&#x9;,coalesce([q_project_name],[j_project_name],p6_project_name) as project_name&#xA;&#x9;,isnull(e.EnumSK,-1) EnumTypeSK&#xA;&#x9;,[j_project_program] as project_program&#xA;&#x9;,[q_project_customer] as project_customer&#xA;&#x9;,[j_project_state]  project_status&#xA;&#x9;,[q_project_status] q_project_status&#xA;&#x9;,[q_project_phase] project_phase&#xA;&#x9;,[q_project_risk] project_risk&#xA;&#x9;,[q_project_sector] project_sector&#xA;&#x9;,[q_project_size] as project_size&#xA;&#x9;,procore_project_name as procoreprojectname&#xA;&#x9;,p6_obsname as OBSName&#xA;&#x9;,p6_project_status&#xA;&#x9;,p6_fcst_start_date&#xA;&#x9;,p6_plan_end_date&#xA;&#x9;,p6_scd_end_date&#xA;&#x9;,p6_engineeringStartDate&#xA;&#x9;,p6_engineeringEndDate&#xA;&#x9;,p6_procurementStartDate&#xA;&#x9;,p6_procurementEndDate&#xA;&#x9;,p6_constructionStartDate&#xA;&#x9;,p6_constructionEndDate&#xA;&#x9;,p6_commissioningStartDate&#xA;&#x9;,p6_commissioningEndDate&#xA;&#x9;,q_project_id&#xA;&#x9;,j_project_id&#xA;&#x9;,p6_project_id&#xA;&#x9;,j_fcst_date&#xA;&#x9;,j_start_date&#xA;&#x9;,q_project_lead&#xA;&#x9;,q_project_scope&#xA;&#x9;,hse_project_id&#xA;&#x9;,p.j_project_sector as JProjectSector&#xA;&#x9;,p.P6_Start_Date as P6StartDate&#xA;,p.procore_project_id ProcoreProjectID&#xA;,P.[procore_program_name] [procoreprogramname]&#xA;,j_scheduling_frequency JProjectSchedulingFrequency&#xA;  FROM [STG].[MASTER].[PROJECT] p&#xA;  left outer join dwh.dim.D_Enumeration e on e.enumID = 'Collab-'+cast(p.enum_type as nvarchar(10))&#xA;  left outer join dwh.dim.D_BuSector b on b.Sector = isnull(p.[q_project_sector],'') and b.BuLabel = coalesce([q_project_bu],[j_project_bu],'') &#xA;  left outer join dwh.dim.D_ProjectClassif pc on pc.ProjectPhase = isnull(p.[q_project_phase],'-') and pc.ProjectSize = isnull(p.q_project_size,'-') and pc.ProjectRisk = isnull(p.q_project_risk,'-')&#xA; ) S &#xA;ON  T.ProjectNumber = S.project_number and T.EndDate is null  and T.ProjectSK &lt;&gt; -1&#xA;WHEN MATCHED AND &#xA;(&#xA;isnull(T.EnumTypeSK,'') &lt;&gt; isnull(S.EnumTypeSK,'') OR&#xA;isnull(T.JProjectSchedulingFrequency,'') &lt;&gt; isnull(S.JProjectSchedulingFrequency,'') OR&#xA;isnull(T.JpassForecastDate,'') &lt;&gt; isnull(S.j_fcst_date,'') OR&#xA;isnull(T.JpassStartDate,'') &lt;&gt; isnull(S.j_start_date,'') OR&#xA;isnull(T.JProjectSector,'') &lt;&gt; isnull(S.JProjectSector,'') OR&#xA;isnull(T.projectname,'') &lt;&gt; isnull(S.project_name,'') OR&#xA;isnull(T.projectcustomer,'') &lt;&gt; isnull(S.project_customer,'') OR&#xA;isnull(T.projectbu,'') &lt;&gt; isnull(S.project_bu,'') OR&#xA;isnull(T.projectsector,'') &lt;&gt; isnull(S.project_sector,'') OR&#xA;isnull(T.ProjectProgram,'') &lt;&gt; isnull(S.project_program,'') OR&#xA;isnull(T.projectsize,'') &lt;&gt; isnull(S.project_size,'') OR&#xA;isnull(T.projectphase,'') &lt;&gt; isnull(S.project_phase,'') OR&#xA;isnull(T.projectstatus,'') &lt;&gt; isnull(S.project_status,'') OR&#xA;isnull(T.projectrisk,'') &lt;&gt; isnull(S.project_risk,'')  OR&#xA;isnull(T.QaProjectID,'') &lt;&gt; isnull(S.q_project_id,'')  OR&#xA;isnull(T.jpassprojectid,'') &lt;&gt; isnull(S.j_project_id,'')  OR&#xA;isnull(T.ProjectBuSectorSK,'') &lt;&gt; isnull(S.BuSectorSK,'') OR&#xA;isnull(T.ProjectClassSK,'') &lt;&gt; isnull(S.ProjectClassSK,'') OR&#xA;isnull(T.QAProjectStatus,'') &lt;&gt; isnull(S.q_project_status,'') OR&#xA;isnull(T.QAProjectScope,'') &lt;&gt; isnull(S.q_project_scope,'')OR&#xA;isnull(T.QAProjectLead,'') &lt;&gt; isnull(S.q_project_lead,'') OR&#xA;isnull(T.P6ProjectID,'') &lt;&gt; isnull(S.p6_project_id,'') OR &#xA;isnull(T.HSEProjectID,'') &lt;&gt; isnull(S.hse_project_id,'') OR &#xA;isnull(T.OBSName,'') &lt;&gt; isnull(S.OBSName,'') OR &#xA;isnull(T.procoreprojectname,'') &lt;&gt; isnull(S.procoreprojectname,'') OR&#xA;isnull(T.P6ProjectStatus,'9999-12-31') &lt;&gt; isnull(S.p6_project_status,'9999-12-31') OR &#xA;isnull(T.ProjStartDate,'9999-12-31') &lt;&gt; isnull(S.p6_fcst_start_date,'9999-12-31') OR &#xA;isnull(T.ContractualEndDate,'9999-12-31') &lt;&gt; isnull(S.p6_plan_end_date,'9999-12-31') OR &#xA;isnull(T.p6ForecastDate,'9999-12-31') &lt;&gt; isnull(S.p6_scd_end_date,'9999-12-31') OR &#xA;isnull(T.EngineeringStartDate,'9999-12-31') &lt;&gt; isnull(S.p6_engineeringStartDate,'9999-12-31') OR &#xA;isnull(T.EngineeringEndDate,'9999-12-31') &lt;&gt; isnull(S.p6_engineeringEndDate,'9999-12-31') OR &#xA;isnull(T.ProcurementStartDate,'9999-12-31') &lt;&gt; isnull(S.p6_procurementStartDate,'9999-12-31') OR &#xA;isnull(T.ProcurementEndDate,'9999-12-31') &lt;&gt; isnull(S.p6_procurementEndDate,'9999-12-31') OR &#xA;isnull(T.ConstructionStartDate,'9999-12-31') &lt;&gt; isnull(S.p6_constructionStartDate,'9999-12-31') OR &#xA;isnull(T.ConstructionEndDate,'9999-12-31') &lt;&gt; isnull(S.p6_constructionEndDate,'9999-12-31') OR &#xA;isnull(T.CommissioningStartDate,'9999-12-31') &lt;&gt; isnull(S.p6_commissioningStartDate,'9999-12-31') OR &#xA;isnull(T.CommissioningEndDate ,'9999-12-31') &lt;&gt; isnull(S.p6_commissioningEndDate,'9999-12-31') OR&#xA;isnull(T.P6StartDate ,'9999-12-31') &lt;&gt; isnull(S.P6StartDate,'9999-12-31') OR&#xA;isnull(T.ProcoreProjectID,'') &lt;&gt; isnull(S.ProcoreProjectID,'') OR&#xA;isnull(T.[procoreprogramname],'') &lt;&gt; isnull(S.[procoreprogramname],'') &#xA;&#xA;)&#xA; THEN UPDATE SET  T.enddate = cast(cast(getdate() as date) as datetime)&#xA;&#xA;WHEN NOT MATCHED BY SOURCE AND T.EndDate is null and T.ProjectSK &lt;&gt; -1&#xA;THEN UPDATE SET T.EndDate=cast(cast(getdate() as date) as datetime) ;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SHARED DIM\D_PROJECT Step 2"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{DA4958AF-6FEB-4966-ADE2-8F900FF83994}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="D_PROJECT Step 2"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{7EFC0C6C-C380-4C43-8E7A-9FACF2484208}"
              SQLTask:SqlStatementSource="MERGE DWH.DIM.D_Project AS T&#xA;USING (&#xA;SELECT &#xA;&#x9;[project_number],procore_project_name as procoreprojectname&#xA;&#x9;,[j_project_bu] project_bu&#xA;&#x9;,isnull(b.BuSectorSK,-1) BuSectorSK &#xA;&#x9;,isnull(pc.ProjectClassSK,-1) ProjectClassSK &#xA;&#x9;,coalesce([q_project_name],[j_project_name],p6_project_name) as project_name&#xA;&#x9;,isnull(e.EnumSK,-1) EnumTypeSK&#xA;&#x9;,[j_project_program] as project_program&#xA;&#x9;,[q_project_customer] as project_customer&#xA;&#x9;,[j_project_state]  project_status&#xA;&#x9;,[q_project_status] q_project_status&#xA;&#x9;,[q_project_phase] project_phase&#xA;&#x9;,[q_project_risk] project_risk&#xA;&#x9;,[q_project_sector] project_sector&#xA;&#x9;,[q_project_size] as project_size&#xA;&#x9;,p6_obsname as OBSName&#xA;&#x9;,p6_project_status&#xA;&#x9;,p6_fcst_start_date&#xA;&#x9;,p6_plan_end_date&#xA;&#x9;,p6_scd_end_date&#xA;&#x9;,p6_engineeringStartDate&#xA;&#x9;,p6_engineeringEndDate&#xA;&#x9;,p6_procurementStartDate&#xA;&#x9;,p6_procurementEndDate&#xA;&#x9;,p6_constructionStartDate&#xA;&#x9;,p6_constructionEndDate&#xA;&#x9;,p6_commissioningStartDate&#xA;&#x9;,p6_commissioningEndDate&#xA;&#x9;,q_project_id&#xA;&#x9;,j_project_id&#xA;&#x9;,p6_project_id&#xA;&#x9;,j_fcst_date&#xA;&#x9;,j_start_date&#xA;&#x9;,q_project_lead&#xA;&#x9;,q_project_scope&#xA;&#x9;,hse_project_id&#xA;&#x9;,p.j_project_sector as JProjectSector&#xA;&#x9;,p.P6_Start_Date as P6StartDate&#xA;,p.procore_project_id ProcoreProjectID&#xA;,P.[procore_program_name] [procoreprogramname]&#xA;,j_scheduling_frequency JProjectSchedulingFrequency&#xA;  FROM [STG].[MASTER].[PROJECT] p&#xA;  left outer join dwh.dim.D_Enumeration e on e.enumID = 'Collab-'+cast(p.enum_type as nvarchar(10))&#xA;  left outer join dwh.dim.D_BuSector b on b.Sector = isnull(p.[q_project_sector],'') and b.BuLabel = coalesce([q_project_bu],[j_project_bu],'') &#xA;  left outer join dwh.dim.D_ProjectClassif pc on pc.ProjectPhase = isnull(p.[q_project_phase],'-') and pc.ProjectSize = isnull(p.q_project_size,'-') and pc.ProjectRisk = isnull(p.q_project_risk,'-')&#xA; ) S &#xA;ON  T.ProjectNumber = S.project_number and T.EndDate is null  and T.ProjectSK &lt;&gt; -1&#xA;WHEN NOT MATCHED BY TARGET&#xA;THEN INSERT (JProjectSchedulingFrequency,[procoreprogramname],procoreprojectname,ProcoreProjectID,P6StartDate,JProjectSector,hseprojectid,P6ProjectID,OBSName,P6ProjectStatus,ProjStartDate,ContractualEndDate,p6ForecastDate,EngineeringStartDate,EngineeringEndDate,ProcurementStartDate,ProcurementEndDate,ConstructionStartDate,ConstructionEndDate,CommissioningStartDate,CommissioningEndDate,QAProjectScope,QAProjectLead,QAProjectStatus,JpassForecastDate,JpassStartDate,ProjectBuSectorSk,ProjectClassSk,ProjectNumber,ProjectName,Projectcustomer,projectstatus,ProjectBU,ProjectSector,ProjectPhase,ProjectSize,ProjectRisk,ProjectProgram,StartDate,jpassprojectid,qaprojectid,EnumTypeSK)&#xA;   VALUES (S.JProjectSchedulingFrequency,S.[procoreprogramname],S.procoreprojectname,S.ProcoreProjectID,S.P6StartDate,S.JProjectSector, S.hse_project_id,S.p6_project_id,S.obsname,S.p6_project_status,S.p6_fcst_start_date,S.p6_plan_end_date,S.p6_scd_end_date,S.p6_engineeringStartDate,S.p6_engineeringEndDate,S.p6_procurementStartDate,S.p6_procurementEndDate,S.p6_constructionStartDate,S.p6_constructionEndDate,S.p6_commissioningStartDate,S.p6_commissioningEndDate,S.q_project_scope,S.q_project_lead,S.q_project_status,S.j_fcst_date,S.j_start_date,S.BuSectorSK,S.ProjectClassSK,S.project_number,S.project_name,S.project_customer,S.project_status,S.project_bu,S.project_sector,s.project_phase,s.project_size,S.project_risk,S.project_program,cast(cast(getdate() as date) as datetime),j_project_id,q_project_id,S.EnumTypeSK)&#xA;;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SHARED DIM\Update BU from SAP"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{26570AF8-2AE9-46BD-BF32-D7D692D74610}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update BU from SAP"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="update  project&#xA;set ProjectSAPBU = isnull(left(p.PRCTR,3),'-')&#xA;from dwh.dim.D_Project project&#xA;inner join stg.sap.proj p on p.PSPID = project.ProjectNumber" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SHARED DIM\Update Procore Project"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{7B727A63-02B6-4788-BF8E-899C57F655B6}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update Procore Project"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="update  project&#xA;set [ProcoreBU] = [custom_fields_custom_field_82842_value_label]&#xA;,[ProcoreSector]=[custom_fields_custom_field_82849_value_label]&#xA;,[ProcoreServiceType]=[custom_fields_custom_field_82909_value_label]&#xA;,[ProcoreActive]=is_demo&#xA;,[ProcoreDemo]=active&#xA;&#xA;from dwh.dim.D_Project project&#xA;inner join stg.PROCORE.projects p on p.id_project = project.ProcoreProjectID&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SHARED DIM\Update SAP Customer"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{9f6242ad-3172-4cd5-a51a-e1e2046ce14d}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update SAP Customer"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="update  t&#xA;set t.SAPCustomer = s.CustomerName&#xA;from dwh.dim.D_Project t&#xA;outer apply (select distinct k.NAME1 CustomerName&#xA;from [STG].[SAP].[PRPS] p&#xA;outer apply (select distinct pr.PSPID from stg.sap.proj pr where pr.PSPNR=p.[PSPHI]) pro&#xA;left join dwh.dim.D_ProfitCenter pr on pr.ProfitCenterCode = p.PRCTR&#xA;left outer join stg.sap.kna1 k on RIGHT('00000000000' + Convert(varchar,k.KUNNR ), 10)=p.ZZKUNNR&#xA;where ZZKUNNR is not null&#xA;and (t.ProjectNumber=pro.PSPID or t.ProjectNumber=p.POSID)&#xA;)s" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SHARED DIM\Update Tiqad &amp; Collab sector"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{DCD7FC50-4B07-4566-89B0-43FD32385535}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update Tiqad &amp; Collab sector"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C5D08859-D311-4A31-BA15-720282097DFD}"
              SQLTask:SqlStatementSource="&#xA;update p&#xA;set &#xA;CollabSector = case &#xA;&#x9;when j_project_sector = 'Asset Management' or q_project_bu ='Asset Management' or q_project_sector = 'Fusion' then N'Asset Management'&#xA;&#x9;when j_project_sector = 'Building' or q_project_sector = 'Buildings &amp; Urban' then N'Building'&#xA;&#x9;when j_project_sector = 'Energy' or q_project_sector = 'Energy' then N'Energy'&#xA;&#x9;when j_project_sector = 'Fertilizer' or q_project_sector = 'Fertilizer' then N'Fertilizer'&#xA;&#x9;when j_project_sector = 'Ma''aden' or q_project_name like '%Ma''aden%' then N'Ma''aden'&#xA;&#x9;when j_project_sector = 'Mining' or q_project_sector = 'Mining' then N'Mining'&#xA;&#x9;when j_project_sector = 'MPH' or q_project_sector = 'Central Axis' then N'MPH'&#xA;&#x9;when j_project_sector = 'South AXE M&amp;I' or q_project_sector = 'South Axis (PFC)' then N'South AXE M&amp;I'&#xA;&#x9;when j_project_sector = 'Transport' or q_project_sector = 'Port &amp; Transport' then N'Transport'&#xA;&#x9;when j_project_sector = 'Water' or q_project_sector = 'Water &amp; Environment' then N'Water'&#xA;end ,&#xA;TiqadSector = case &#xA;&#x9;when j_project_sector = 'Asset Management' or q_project_bu ='Asset Management' or q_project_sector = 'Fusion' then N'Asset Management'&#xA;&#x9;when j_project_sector = 'Building' or q_project_sector = 'Buildings &amp; Urban' then N'Buildings &amp; Urban'&#xA;&#x9;when j_project_sector = 'Energy' or q_project_sector = 'Energy' then N'Energy'&#xA;&#x9;when j_project_sector = 'Fertilizer' or q_project_sector = 'Fertilizer' then N'Fertilizer'&#xA;&#x9;when j_project_sector = 'Ma''aden' or q_project_name like '%Ma''aden%' then N'Ma''aden'&#xA;&#x9;when j_project_sector = 'Mining' or q_project_sector = 'Mining' then N'Mining'&#xA;&#x9;when j_project_sector = 'MPH' or q_project_sector = 'Central Axis' then N'Central Axis'&#xA;&#x9;when j_project_sector = 'South AXE M&amp;I' or q_project_sector = 'South Axis (PFC)' then N'South Axis (PFC)'&#xA;&#x9;when j_project_sector = 'Transport' or q_project_sector = 'Port &amp; Transport' then N'Port &amp; Transport'&#xA;&#x9;when j_project_sector = 'Water' or q_project_sector = 'Water &amp; Environment' then N'Water &amp; Environment'&#xA;end&#xA;&#xA;from dwh.dim.d_project p&#xA;inner join stg.master.PROJECT pp on p.ProjectNumber = pP.Project_Number" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SHARED DIM.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{131470EC-351B-48C1-AD1E-36758B53D93F}"
          DTS:From="Package\SHARED DIM\D_PROJECT Step 1"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\SHARED DIM\D_PROJECT Step 2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SHARED DIM.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{7608731F-B9C1-444C-A0EE-46A8360EF625}"
          DTS:From="Package\SHARED DIM\D_PROJECT Step 2"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\SHARED DIM\Update Tiqad &amp; Collab sector" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SHARED DIM.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{37CA350F-3598-44C6-985C-E4F8631FEB5E}"
          DTS:From="Package\SHARED DIM\Update Tiqad &amp; Collab sector"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\SHARED DIM\Update BU from SAP" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SHARED DIM.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{EDF289F1-C4DF-4975-9529-12CAACBC4F6E}"
          DTS:From="Package\SHARED DIM\Update BU from SAP"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\SHARED DIM\Update Procore Project" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SHARED DIM.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{10A2BA3A-5D04-4C70-AA34-A01E7DAB710A}"
          DTS:From="Package\SHARED DIM\Update Procore Project"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\SHARED DIM\Update SAP Customer" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{9A3E5373-04E1-4C88-9FEC-1E454197946B}"
      DTS:From="Package\P6 DIM"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\SAP DIM" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{C255A590-4DB1-460C-9678-96BE02D4DFD3}"
      DTS:From="Package\SAP DIM"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\QA DIM" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{73920BD0-B103-4678-8DDD-FC61B6327DD6}"
      DTS:From="Package\QA DIM"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\JPASS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{03AC0BD7-F08B-4B40-8407-57132C8689F0}"
      DTS:From="Package\JPASS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\SHARED DIM" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{8869E394-C5BB-4725-87AD-08732C2F8930}"
      DTS:From="Package\HSE DIM"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\P6 DIM" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{B81F055A-7B55-4389-B0E1-9151E0723ADA}"
      DTS:From="Package\CSP DIM"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\HSE DIM" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{8D62DED3-D372-4F10-8E10-6D61A8D298F4}"
      DTS:From="Package\PROCORE DIM"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\CSP DIM" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="128" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="159,42"
          Id="Package\CSP DIM\D_CacheAdUsers"
          TopLeft="13.416666666667,9.25" />
        <NodeLayout
          Size="162,42"
          Id="Package\CSP DIM\D_Contract"
          TopLeft="184.5,9" />
        <NodeLayout
          Size="152,42"
          Id="Package\CSP DIM\D_Enumeration"
          TopLeft="357.75,9.75" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="540,91"
          Size="540,134"
          Id="Package\CSP DIM"
          TopLeft="1290.58333333333,737.826797623948" />
        <NodeLayout
          Size="112,42"
          Id="Package\HSE DIM\D_SOR"
          TopLeft="17.25,74.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\HSE DIM\D_SubEvent"
          TopLeft="364.75,22" />
        <NodeLayout
          Size="159,42"
          Id="Package\HSE DIM\D_SubeventType"
          TopLeft="9.75,19.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\HSE DIM\D_Submiter"
          TopLeft="184.75,18.25" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="533,139"
          Size="533,182"
          Id="Package\HSE DIM"
          TopLeft="696.71428571429,718.299019846174" />
        <NodeLayout
          Size="163,42"
          Id="Package\JPASS\D_AccOrganization"
          TopLeft="428.25,73.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\JPASS\D_Behavior"
          TopLeft="415.75,128" />
        <NodeLayout
          Size="156,42"
          Id="Package\JPASS\D_BehaviorType"
          TopLeft="217.305555555556,183.722222222222" />
        <NodeLayout
          Size="159,42"
          Id="Package\JPASS\D_CacheAdUsers"
          TopLeft="40.166666666667,238.75" />
        <NodeLayout
          Size="139,42"
          Id="Package\JPASS\D_Certificate"
          TopLeft="435.75,16.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\JPASS\D_Company"
          TopLeft="22,121" />
        <NodeLayout
          Size="207,42"
          Id="Package\JPASS\D_ConstructionEquipement"
          TopLeft="441.202380952381,310.642857142857" />
        <NodeLayout
          Size="163,42"
          Id="Package\JPASS\D_EmployeeDetails"
          TopLeft="210,12.75" />
        <NodeLayout
          Size="152,42"
          Id="Package\JPASS\D_Enumeration"
          TopLeft="223,240.25" />
        <NodeLayout
          Size="207,42"
          Id="Package\JPASS\D_Inspection"
          TopLeft="26.0357142857142,308.821428571428" />
        <NodeLayout
          Size="168,42"
          Id="Package\JPASS\D_ScannedOpType"
          TopLeft="27.25,174" />
        <NodeLayout
          Size="163,42"
          Id="Package\JPASS\D_TaskHistory"
          TopLeft="36,359" />
        <NodeLayout
          Size="163,42"
          Id="Package\JPASS\D_Trainer"
          TopLeft="216.25,126.75" />
        <NodeLayout
          Size="163,42"
          Id="Package\JPASS\D_Training"
          TopLeft="20.75,10.75" />
        <NodeLayout
          Size="163,42"
          Id="Package\JPASS\D_TrainingCategory"
          TopLeft="17,67.75" />
        <NodeLayout
          Size="163,42"
          Id="Package\JPASS\D_ValidationStatus"
          TopLeft="212.5,66" />
        <NodeLayout
          Size="152,42"
          Id="Package\JPASS\D_Warning"
          TopLeft="266.309523809524,312.535714285714" />
        <NodeLayout
          Size="143,42"
          Id="Package\JPASS\D_WorkOrder"
          TopLeft="421.964285714286,246.392857142857" />
        <NodeLayout
          Size="153,42"
          Id="Package\JPASS\Emp Comments"
          TopLeft="428.714285714286,191.321428571429" />
        <EdgeLayout
          Id="Package\JPASS.PrecedenceConstraints[Constraint 2]"
          TopLeft="233.035714285714,331.678571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="33.2738095238098,0"
              Start="0,0"
              End="25.7738095238098,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="25.7738095238098,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\JPASS.PrecedenceConstraints[Constraint 3]"
          TopLeft="418.309523809524,332.589285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="22.8928571428569,0"
              Start="0,0"
              End="15.3928571428569,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="15.3928571428569,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="660,483"
          Size="660,526"
          Id="Package\JPASS"
          TopLeft="197.285714285714,1172.69584524299" />
        <NodeLayout
          Size="171,42"
          Id="Package\P6 DIM\D_ActivityHierarchy"
          TopLeft="191.5,15.75" />
        <NodeLayout
          Size="157,42"
          Id="Package\P6 DIM\D_WbsHierarchy"
          TopLeft="5.5,13" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="442,113"
          Size="442,156"
          Id="Package\P6 DIM"
          TopLeft="208.253968253969,739.25536905252" />
        <NodeLayout
          Size="146,42"
          Id="Package\PROCORE DIM\D_Attachment"
          TopLeft="235.75,435.75" />
        <NodeLayout
          Size="163,42"
          Id="Package\PROCORE DIM\D_BankGuarantee"
          TopLeft="211.549229069254,361.532032268793" />
        <NodeLayout
          Size="163,42"
          Id="Package\PROCORE DIM\D_ChangeOrderRequest"
          TopLeft="403.23809856298,203.862744633302" />
        <NodeLayout
          Size="165,42"
          Id="Package\PROCORE DIM\D_ChangeRequest"
          TopLeft="58,436" />
        <NodeLayout
          Size="149,42"
          Id="Package\PROCORE DIM\D_CorresDetail"
          TopLeft="205.857139329521,291.777778588089" />
        <NodeLayout
          Size="151,42"
          Id="Package\PROCORE DIM\D_CorrespType"
          TopLeft="404.996038247128,273.223857162458" />
        <NodeLayout
          Size="132,42"
          Id="Package\PROCORE DIM\D_CostCalc"
          TopLeft="214,155" />
        <NodeLayout
          Size="136,42"
          Id="Package\PROCORE DIM\D_CostCode"
          TopLeft="212,82" />
        <NodeLayout
          Size="142,42"
          Id="Package\PROCORE DIM\D_EventType"
          TopLeft="25,184" />
        <NodeLayout
          Size="138,42"
          Id="Package\PROCORE DIM\D_Insurance"
          TopLeft="31.2317664000452,311.607848118287" />
        <NodeLayout
          Size="177,42"
          Id="Package\PROCORE DIM\D_InsuranceProvider"
          TopLeft="393,160" />
        <NodeLayout
          Size="162,42"
          Id="Package\PROCORE DIM\D_InsuranceType"
          TopLeft="393,24" />
        <NodeLayout
          Size="163,42"
          Id="Package\PROCORE DIM\D_PayIssued"
          TopLeft="401.25,340.75" />
        <NodeLayout
          Size="163,42"
          Id="Package\PROCORE DIM\D_PDN"
          TopLeft="35,370" />
        <NodeLayout
          Size="163,42"
          Id="Package\PROCORE DIM\D_PROC_CONTRACT"
          TopLeft="17,134" />
        <NodeLayout
          Size="150,42"
          Id="Package\PROCORE DIM\D_PROC_USER"
          TopLeft="29,21" />
        <NodeLayout
          Size="178,42"
          Id="Package\PROCORE DIM\D_ProcCorrespStatus"
          TopLeft="10.5968454137142,244.522879844718" />
        <NodeLayout
          Size="142,42"
          Id="Package\PROCORE DIM\D_ProcStatus"
          TopLeft="201.634923540816,217.228757121296" />
        <NodeLayout
          Size="145,42"
          Id="Package\PROCORE DIM\D_ProjectRole"
          TopLeft="456.5,433.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\PROCORE DIM\D_SubContracting"
          TopLeft="46.5,512.25" />
        <NodeLayout
          Size="133,42"
          Id="Package\PROCORE DIM\D_Vendor"
          TopLeft="201,20" />
        <NodeLayout
          Size="151,42"
          Id="Package\PROCORE DIM\Data Flow Task"
          TopLeft="33,81" />
        <NodeLayout
          Size="163,42"
          Id="Package\PROCORE DIM\Update ins type unified"
          TopLeft="387,98" />
        <EdgeLayout
          Id="Package\PROCORE DIM.PrecedenceConstraints[Constraint]"
          TopLeft="471.25,66">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\PROCORE DIM.PrecedenceConstraints[Constraint 1]"
          TopLeft="29,42">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="4,60"
              Start="0,0"
              End="-3.5,60">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.5,0"
                    Point2="-22.5,0"
                    Point3="-22.5,4" />
                  <mssgle:LineSegment
                    End="-22.5,56" />
                  <mssgle:CubicBezierSegment
                    Point1="-22.5,56"
                    Point2="-22.5,60"
                    Point3="-18.5,60" />
                  <mssgle:LineSegment
                    End="-3.5,60" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="624,639"
          Size="624,682"
          Id="Package\PROCORE DIM"
          TopLeft="1180.57142863225,0.566992388602102" />
        <NodeLayout
          Size="163,42"
          Id="Package\QA DIM\D_Activity"
          TopLeft="228.5,76.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\QA DIM\D_ActivityStatus"
          TopLeft="224.25,20.75" />
        <NodeLayout
          Size="159,42"
          Id="Package\QA DIM\D_CacheAdUsers"
          TopLeft="36,199.25" />
        <NodeLayout
          Size="163,42"
          Id="Package\QA DIM\D_Capa"
          TopLeft="603.25,140.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\QA DIM\D_CapaStatus"
          TopLeft="424,143.5" />
        <NodeLayout
          Size="152,42"
          Id="Package\QA DIM\D_Enumeration"
          TopLeft="35.75,77.5" />
        <NodeLayout
          Size="158,42"
          Id="Package\QA DIM\D_FindingReport"
          TopLeft="428.25,206.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\QA DIM\D_OverdueRating"
          TopLeft="33,142.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\QA DIM\D_Planning"
          TopLeft="404.5,15.25" />
        <NodeLayout
          Size="163,42"
          Id="Package\QA DIM\D_PlanningActivityType"
          TopLeft="596,76" />
        <NodeLayout
          Size="163,42"
          Id="Package\QA DIM\D_PlanningStatus"
          TopLeft="591.5,18.25" />
        <NodeLayout
          Size="163,42"
          Id="Package\QA DIM\D_ReportStatus"
          TopLeft="235.25,204.25" />
        <NodeLayout
          Size="163,42"
          Id="Package\QA DIM\D_Result"
          TopLeft="31.25,20.75" />
        <NodeLayout
          Size="163,42"
          Id="Package\QA DIM\D_Risk"
          TopLeft="235.5,143.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\QA DIM\D_RootCause"
          TopLeft="416.5,74" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="773,266"
          Size="773,309"
          Id="Package\QA DIM"
          TopLeft="1052.96428571429,957.886321433471" />
        <NodeLayout
          Size="144,42"
          Id="Package\SAP DIM\D_CostCenter"
          TopLeft="362.071428571428,23" />
        <NodeLayout
          Size="151,42"
          Id="Package\SAP DIM\D_CostElement"
          TopLeft="559.5,96.8571428571428" />
        <NodeLayout
          Size="138,42"
          Id="Package\SAP DIM\D_Employee"
          TopLeft="546.928571428571,21.4285714285714" />
        <NodeLayout
          Size="142,42"
          Id="Package\SAP DIM\D_GLAccount"
          TopLeft="338.785714285714,88.5714285714285" />
        <NodeLayout
          Size="144,42"
          Id="Package\SAP DIM\D_ProfiCenter"
          TopLeft="11.5,19.7142857142857" />
        <NodeLayout
          Size="151,42"
          Id="Package\SAP DIM\D_ProjectTasks"
          TopLeft="18.5714285714287,91.7142857142857" />
        <NodeLayout
          Size="101,42"
          Id="Package\SAP DIM\WBS"
          TopLeft="212.261904761905,20.0476190476188" />
        <EdgeLayout
          Id="Package\SAP DIM.PrecedenceConstraints[Constraint]"
          TopLeft="155.5,40.8809523809522">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="56.7619047619046,0"
              Start="0,0"
              End="49.2619047619046,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="49.2619047619046,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SAP DIM.PrecedenceConstraints[Constraint 1]"
          TopLeft="338.785714285714,111.142857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-169.214285714285,0"
              Start="0,0"
              End="-161.714285714285,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-161.714285714285,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SAP DIM.PrecedenceConstraints[Constraint 2]"
          TopLeft="615.928571428571,63.4285714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="19.0714285714284,33.4285714285714"
              Start="0,0"
              End="19.0714285714284,25.9285714285714">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.7142857142857" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.7142857142857"
                    Point2="0,16.7142857142857"
                    Point3="4,16.7142857142857" />
                  <mssgle:LineSegment
                    End="15.0714285714284,16.7142857142857" />
                  <mssgle:CubicBezierSegment
                    Point1="15.0714285714284,16.7142857142857"
                    Point2="19.0714285714284,16.7142857142857"
                    Point3="19.0714285714284,20.7142857142857" />
                  <mssgle:LineSegment
                    End="19.0714285714284,25.9285714285714" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SAP DIM.PrecedenceConstraints[Constraint 3]"
          TopLeft="313.261904761905,42.5238095238094">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="48.8095238095239,0"
              Start="0,0"
              End="41.3095238095239,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="41.3095238095239,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SAP DIM.PrecedenceConstraints[Constraint 4]"
          TopLeft="506.071428571428,43.2142857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="40.8571428571429,0"
              Start="0,0"
              End="33.3571428571429,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="33.3571428571429,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SAP DIM.PrecedenceConstraints[Constraint 5]"
          TopLeft="559.5,117.857142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-78.7142857142858,-8.28571428571433"
              Start="0,0"
              End="-71.2142857142858,-8.28571428571433">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-35.3571428571429,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-35.3571428571429,0"
                    Point2="-39.3571428571429,0"
                    Point3="-39.3571428571429,-4" />
                  <mssgle:LineSegment
                    End="-39.3571428571429,-4.28571428571433" />
                  <mssgle:CubicBezierSegment
                    Point1="-39.3571428571429,-4.28571428571433"
                    Point2="-39.3571428571429,-8.28571428571433"
                    Point3="-43.3571428571429,-8.28571428571433" />
                  <mssgle:LineSegment
                    End="-71.2142857142858,-8.28571428571433" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="798,160"
          Size="798,203"
          Id="Package\SAP DIM"
          TopLeft="200.940476190476,947.695845242994" />
        <NodeLayout
          Size="169,42"
          Id="Package\SHARED DIM\D_PROJECT Step 1"
          TopLeft="31.8888888888891,26.3333333333335" />
        <NodeLayout
          Size="163,42"
          Id="Package\SHARED DIM\D_PROJECT Step 2"
          TopLeft="43.2222222222222,112.111111111111" />
        <NodeLayout
          Size="176,42"
          Id="Package\SHARED DIM\Update BU from SAP"
          TopLeft="42,270" />
        <NodeLayout
          Size="188,42"
          Id="Package\SHARED DIM\Update Procore Project"
          TopLeft="87,358" />
        <NodeLayout
          Size="182,42"
          Id="Package\SHARED DIM\Update SAP Customer"
          TopLeft="69.285714285714,425.04901984617" />
        <NodeLayout
          Size="216,42"
          Id="Package\SHARED DIM\Update Tiqad &amp; Collab sector"
          TopLeft="59,184" />
        <EdgeLayout
          Id="Package\SHARED DIM.PrecedenceConstraints[Constraint]"
          TopLeft="116.388888888889,68.3333333333335">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="8.33333333333306,43.7777777777775"
              Start="0,0"
              End="8.33333333333306,36.2777777777775">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.8888888888888" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.8888888888888"
                    Point2="0,21.8888888888888"
                    Point3="4,21.8888888888888" />
                  <mssgle:LineSegment
                    End="4.33333333333306,21.8888888888888" />
                  <mssgle:CubicBezierSegment
                    Point1="4.33333333333306,21.8888888888888"
                    Point2="8.33333333333306,21.8888888888888"
                    Point3="8.33333333333306,25.8888888888888" />
                  <mssgle:LineSegment
                    End="8.33333333333306,36.2777777777775" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SHARED DIM.PrecedenceConstraints[Constraint 1]"
          TopLeft="124.722222222222,154.111111111111">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="42.2777777777778,29.888888888889"
              Start="0,0"
              End="42.2777777777778,22.388888888889">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.9444444444445" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.9444444444445"
                    Point2="0,14.9444444444445"
                    Point3="4,14.9444444444445" />
                  <mssgle:LineSegment
                    End="38.2777777777778,14.9444444444445" />
                  <mssgle:CubicBezierSegment
                    Point1="38.2777777777778,14.9444444444445"
                    Point2="42.2777777777778,14.9444444444445"
                    Point3="42.2777777777778,18.9444444444445" />
                  <mssgle:LineSegment
                    End="42.2777777777778,22.388888888889" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SHARED DIM.PrecedenceConstraints[Constraint 2]"
          TopLeft="167,226">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-37,44"
              Start="0,0"
              End="-37,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18"
                    Point2="0,22"
                    Point3="-4,22" />
                  <mssgle:LineSegment
                    End="-33,22" />
                  <mssgle:CubicBezierSegment
                    Point1="-33,22"
                    Point2="-37,22"
                    Point3="-37,26" />
                  <mssgle:LineSegment
                    End="-37,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SHARED DIM.PrecedenceConstraints[Constraint 3]"
          TopLeft="130,312">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="51,46"
              Start="0,0"
              End="51,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19"
                    Point2="0,23"
                    Point3="4,23" />
                  <mssgle:LineSegment
                    End="47,23" />
                  <mssgle:CubicBezierSegment
                    Point1="47,23"
                    Point2="51,23"
                    Point3="51,27" />
                  <mssgle:LineSegment
                    End="51,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SHARED DIM.PrecedenceConstraints[Constraint 4]"
          TopLeft="181,400">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-20.714285714286,25.04901984617"
              Start="0,0"
              End="-20.714285714286,17.54901984617">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.52450992308502" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.52450992308502"
                    Point2="0,12.524509923085"
                    Point3="-4,12.524509923085" />
                  <mssgle:LineSegment
                    End="-16.714285714286,12.524509923085" />
                  <mssgle:CubicBezierSegment
                    Point1="-16.714285714286,12.524509923085"
                    Point2="-20.714285714286,12.524509923085"
                    Point3="-20.714285714286,16.524509923085" />
                  <mssgle:LineSegment
                    End="-20.714285714286,17.54901984617" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="322,522"
          Size="322,565"
          Id="Package\SHARED DIM"
          TopLeft="1168.38888888889,1341.04901984617" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="429.253968253969,866.25536905252">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="170.686507936507,81.4404761904762"
              Start="0,0"
              End="170.686507936507,73.9404761904762">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.7202380952381" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.7202380952381"
                    Point2="0,40.7202380952381"
                    Point3="4,40.7202380952381" />
                  <mssgle:LineSegment
                    End="166.686507936507,40.7202380952381" />
                  <mssgle:CubicBezierSegment
                    Point1="166.686507936507,40.7202380952381"
                    Point2="170.686507936507,40.7202380952381"
                    Point3="170.686507936507,44.7202380952381" />
                  <mssgle:LineSegment
                    End="170.686507936507,73.9404761904762" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="998.940476190476,1049.19584524299">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="54.0238095238099,13.0238095238093"
              Start="0,0"
              End="46.5238095238099,13.0238095238093">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28.2473093551653,0" />
                  <mssgle:CubicBezierSegment
                    Point1="28.2473093551653,0"
                    Point2="32.2473093551653,0"
                    Point3="32.2473093551653,4" />
                  <mssgle:LineSegment
                    End="32.2473093551653,9.02380952380929" />
                  <mssgle:CubicBezierSegment
                    Point1="32.2473093551653,9.02380952380929"
                    Point2="32.2473093551653,13.0238095238093"
                    Point3="36.2473093551653,13.0238095238093" />
                  <mssgle:LineSegment
                    End="46.5238095238099,13.0238095238093" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="1052.96428571429,1162.4196547668">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-195.678571428576,187.076190476186"
              Start="0,0"
              End="-188.178571428576,187.076190476186">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-94.0985656552295,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-94.0985656552295,0"
                    Point2="-98.0985656552295,0"
                    Point3="-98.0985656552295,4" />
                  <mssgle:LineSegment
                    End="-98.0985656552295,183.076190476186" />
                  <mssgle:CubicBezierSegment
                    Point1="-98.0985656552295,183.076190476186"
                    Point2="-98.0985656552295,187.076190476186"
                    Point3="-102.09856565523,187.076190476186" />
                  <mssgle:LineSegment
                    End="-188.178571428576,187.076190476186" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="857.285714285714,1522.02917857632">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="311.103174603176,101.519841269847"
              Start="0,0"
              End="303.603174603176,101.519841269847">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="121.007340818562,0" />
                  <mssgle:CubicBezierSegment
                    Point1="121.007340818562,0"
                    Point2="125.007340818562,0"
                    Point3="125.007340818562,4" />
                  <mssgle:LineSegment
                    End="125.007340818562,97.5198412698469" />
                  <mssgle:CubicBezierSegment
                    Point1="125.007340818562,97.5198412698469"
                    Point2="125.007340818562,101.519841269847"
                    Point3="129.007340818562,101.519841269847" />
                  <mssgle:LineSegment
                    End="303.603174603176,101.519841269847" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="696.71428571429,806.027194449347">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-46.4603174603212,0"
              Start="0,0"
              End="-38.9603174603212,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-38.9603174603212,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="1290.58333333333,807.062908735061">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-60.8690476190402,0"
              Start="0,0"
              End="-53.3690476190402,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-53.3690476190402,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="1492.57142863225,682.566992388602">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="68.0119047010801,55.2598052353454"
              Start="0,0"
              End="68.0119047010801,47.7598052353454">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.6299026176727" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.6299026176727"
                    Point2="0,27.6299026176727"
                    Point3="4,27.6299026176727" />
                  <mssgle:LineSegment
                    End="64.0119047010801,27.6299026176727" />
                  <mssgle:CubicBezierSegment
                    Point1="64.0119047010801,27.6299026176727"
                    Point2="68.0119047010801,27.6299026176727"
                    Point3="68.0119047010801,31.6299026176727" />
                  <mssgle:LineSegment
                    End="68.0119047010801,47.7598052353454" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\PROCORE DIM\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171,42"
          Id="Package\PROCORE DIM\Data Flow Task\OLE DB Destination"
          TopLeft="244,317" />
        <NodeLayout
          Size="150,42"
          Id="Package\PROCORE DIM\Data Flow Task\OLE DB Source"
          TopLeft="224,149" />
        <EdgeLayout
          Id="Package\PROCORE DIM\Data Flow Task.Paths[OLE DB Source Output]"
          TopLeft="299,191">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="30.5,126"
              Start="0,0"
              End="30.5,118.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,59" />
                  <mssgle:CubicBezierSegment
                    Point1="0,59"
                    Point2="0,63"
                    Point3="4,63" />
                  <mssgle:LineSegment
                    End="26.5,63" />
                  <mssgle:CubicBezierSegment
                    Point1="26.5,63"
                    Point2="30.5,63"
                    Point3="30.5,67" />
                  <mssgle:LineSegment
                    End="30.5,118.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\PROCORE DIM\Data Flow Task\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\PROCORE DIM\Data Flow Task\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>